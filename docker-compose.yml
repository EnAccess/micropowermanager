# Local development setup building MicroPowerManager containers in development mode
services:
  backend-dev:
    container_name: backend-dev
    build:
      dockerfile: docker/DockerfileBackendDev
    env_file: ./dev/.env.micropowermanager-backend
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    links:
      - mysql:db
      - redis:redis
    ports:
      - 8000:80
      - 8443:443
    volumes:
      - ./src/backend:/var/www/html
    healthcheck:
      test: [CMD, curl, -f, http://localhost/up]
      start_period: 60s
      interval: 30s
      timeout: 10s
      retries: 100

  frontend-dev:
    container_name: frontend-dev
    build:
      dockerfile: docker/DockerfileFrontendDev
    env_file: ./dev/.env.micropowermanager-frontend
    ports:
      - 8001:8080
    volumes:
      - ./src/frontend:/app/
      - frontend_node_modules:/app/node_modules/

  scheduler-dev:
    container_name: scheduler-dev
    build:
      dockerfile: docker/DockerfileSchedulerDev
    # micropowermanager-scheduler is a backend service and uses the same configuration as micropowermanager-backend
    env_file: ./dev/.env.micropowermanager-backend
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
      backend-dev:
        condition: service_healthy
    links:
      - mysql:db
      - redis:redis
    volumes:
      - ./docker/config/php/php.ini:/usr/local/etc/php/php.ini
      - ./src/backend:/var/www/html

  worker:
    container_name: worker
    restart: unless-stopped
    build:
      dockerfile: docker/DockerfileQueueWorker
    env_file: ./dev/.env.micropowermanager-backend
    volumes:
      - ./src/backend:/var/www/laravel
      - ./docker/config/php/php.ini:/usr/local/etc/php/php.ini
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    links:
      - mysql:db
      - redis:redis

  redis:
    container_name: redis
    image: redis:5
    volumes:
      - redis_data:/data
    ports:
      - 6379:6379

  mysql:
    container_name: mysql
    image: mysql:8.4
    env_file: ./dev/.env.mysql
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - 3306:3306
    healthcheck:
      test: [CMD, mysqladmin, ping, -h, localhost]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  frontend_node_modules:
  mysql_data:
  redis_data:
