openapi: 3.0.3
info:
  title: 'MicroPowerManager API docs'
  description: "\n![MPM Logo](https://micropowermanager.com/assets/images/Website_Illustrations_Logo.png)\n\n<p align=\"center\">\n    <em>Decentralized utility management made simple. Manage customers, revenues and assets with this all-in one open source platform.</em>\n</p>\n\n---\n\n# ðŸ’« Overview\nThis documentation will provide all the information you need to work with our API.\n\nAs you scroll, you'll see code examples for working with the API in different programming languages in the dark area to the right (or as part of the content on mobile).\nYou can switch the language used with the tabs at the top right (or from the nav menu at the top left on mobile)."
  version: 1.0.0
servers:
  -
    url: 'https://backend-demo.micropowermanager.io'
paths:
  /api/app/agents/appliance_types:
    get:
      summary: 'List for Android-APP.'
      operationId: listForAndroidAPP
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Agent-Appliances
      security: []
  /api/app/login:
    post:
      summary: 'Get JWT via given credentials.'
      operationId: getJWTViaGivenCredentials
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Agent-Authenticator
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: skiles.bennett@example.com
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: 'N/e1=vS"'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/app/logout:
    post:
      summary: 'Log the user out (Invalidate the token).'
      operationId: logTheUserOutInvalidateTheToken
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Agent-Authenticator
      security: []
  /api/app/refresh:
    post:
      summary: 'Refresh a token.'
      operationId: refreshAToken
      description: 'A valid JWT token has to be sent to refresh the token.'
      parameters: []
      responses: {  }
      tags:
        - Agent-Authenticator
      security: []
  /api/app/me:
    get:
      summary: 'Get the authenticated User.'
      operationId: getTheAuthenticatedUser
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Agent-Authenticator
      security: []
  /api/auth/login:
    post:
      summary: 'JWT authentication.'
      operationId: jWTAuthentication
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Authenticator
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: hbosco@example.org
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: UH`-eV
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/auth/logout:
    post:
      summary: 'Log the user out (Invalidate the token).'
      operationId: logTheUserOutInvalidateTheToken
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Authenticator
      security: []
  /api/auth/refresh:
    post:
      summary: "Refresh token\nGenerates a new valid token for the next 3600 seconds\nInorder to generate the new token, a working (Bearer)token has to be provided in the header."
      operationId: refreshTokenGeneratesANewValidTokenForTheNext3600SecondsInorderToGenerateTheNewTokenAWorkingBearertokenHasToBeProvidedInTheHeader
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Authenticator
      security: []
  /api/auth/me:
    get:
      summary: 'Get the authenticated User.'
      operationId: getTheAuthenticatedUser
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Authenticator
      security: []
  /api/cities:
    get:
      summary: ''
      operationId: getApiCities
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiCities
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: animi
                  nullable: false
                mini_grid_id:
                  type: string
                  description: ''
                  example: nihil
                  nullable: false
              required:
                - name
                - mini_grid_id
      security: []
  '/api/cities/{cityId}':
    get:
      summary: ''
      operationId: getApiCitiesCityId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiCitiesCityId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: explicabo
                  nullable: false
                mini_grid_id:
                  type: string
                  description: ''
                  example: laborum
                  nullable: false
              required:
                - name
                - mini_grid_id
      security: []
    parameters:
      -
        in: path
        name: cityId
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  /api/countries:
    get:
      summary: ''
      operationId: getApiCountries
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiCountries
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country_name:
                  type: string
                  description: ''
                  example: esse
                  nullable: false
                country_code:
                  type: string
                  description: validation.min.
                  example: ixqgdjpnwalnbobivvylsioiaewxisrgxmhlfpnbrdd
                  nullable: false
              required:
                - country_name
                - country_code
      security: []
  '/api/countries/{country_country_code}':
    get:
      summary: ''
      operationId: getApiCountriesCountry_country_code
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: country_country_code
        description: ''
        example: enim
        required: true
        schema:
          type: string
  /api/meters:
    get:
      summary: "List\nLists all used meters with meterType and meterParameters.tariff\nThe response is paginated with 15 results on each page/request."
      operationId: listListsAllUsedMetersWithMeterTypeAndMeterParameterstariffTheResponseIsPaginatedWith15ResultsOnEachPagerequest
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data:
                    -
                      id: 1
                      serial_number: '12312123'
                      meter_type_id: 1
                      in_use: 1
                      manufacturer_id: 1
                      created_at: '2018-06-22 11:50:09'
                      updated_at: '2018-12-17 14:20:23'
                      deleted_at: null
                      meter_type:
                        id: 1
                        online: 0
                        phase: 1
                        max_current: 10
                        created_at: '2018-06-22 08:15:12'
                        updated_at: '2018-06-22 08:15:12'
                      meter_parameter:
                        id: 1
                        connection_type_id: 1
                        created_at: '2018-06-22 11:59:46'
                        updated_at: '2018-12-17 14:20:23'
                        connection_group_id: 1
                        tariff:
                          id: 1
                          name: 'Productiove Usage'
                          price: 200
                          currency: EUR
                          factor: 1
                          created_at: '2018-07-27 15:32:42'
                          updated_at: '2018-07-27 15:32:42'
                          deleted_at: null
                  first_page_url: 'http://localhost:8000/api/meters?page=1'
                  from: 1
                  last_page: 324
                  last_page_url: 'http://localhost:8000/api/meters?page=324'
                  next_page_url: 'http://localhost:8000/api/meters?page=2'
                  path: 'http://localhost:8000/api/meters'
                  per_page: 15
                  prev_page_url: null
                  to: 15
                  total: 4852
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        serial_number: '12312123'
                        meter_type_id: 1
                        in_use: 1
                        manufacturer_id: 1
                        created_at: '2018-06-22 11:50:09'
                        updated_at: '2018-12-17 14:20:23'
                        deleted_at: null
                        meter_type:
                          id: 1
                          online: 0
                          phase: 1
                          max_current: 10
                          created_at: '2018-06-22 08:15:12'
                          updated_at: '2018-06-22 08:15:12'
                        meter_parameter:
                          id: 1
                          connection_type_id: 1
                          created_at: '2018-06-22 11:59:46'
                          updated_at: '2018-12-17 14:20:23'
                          connection_group_id: 1
                          tariff:
                            id: 1
                            name: 'Productiove Usage'
                            price: 200
                            currency: EUR
                            factor: 1
                            created_at: '2018-07-27 15:32:42'
                            updated_at: '2018-07-27 15:32:42'
                            deleted_at: null
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        serial_number:
                          type: string
                          example: '12312123'
                        meter_type_id:
                          type: integer
                          example: 1
                        in_use:
                          type: integer
                          example: 1
                        manufacturer_id:
                          type: integer
                          example: 1
                        created_at:
                          type: string
                          example: '2018-06-22 11:50:09'
                        updated_at:
                          type: string
                          example: '2018-12-17 14:20:23'
                        deleted_at:
                          type: string
                          example: null
                        meter_type:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            online:
                              type: integer
                              example: 0
                            phase:
                              type: integer
                              example: 1
                            max_current:
                              type: integer
                              example: 10
                            created_at:
                              type: string
                              example: '2018-06-22 08:15:12'
                            updated_at:
                              type: string
                              example: '2018-06-22 08:15:12'
                        meter_parameter:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            connection_type_id:
                              type: integer
                              example: 1
                            created_at:
                              type: string
                              example: '2018-06-22 11:59:46'
                            updated_at:
                              type: string
                              example: '2018-12-17 14:20:23'
                            connection_group_id:
                              type: integer
                              example: 1
                            tariff:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 1
                                name:
                                  type: string
                                  example: 'Productiove Usage'
                                price:
                                  type: integer
                                  example: 200
                                currency:
                                  type: string
                                  example: EUR
                                factor:
                                  type: integer
                                  example: 1
                                created_at:
                                  type: string
                                  example: '2018-07-27 15:32:42'
                                updated_at:
                                  type: string
                                  example: '2018-07-27 15:32:42'
                                deleted_at:
                                  type: string
                                  example: null
                  first_page_url:
                    type: string
                    example: 'http://localhost:8000/api/meters?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 324
                  last_page_url:
                    type: string
                    example: 'http://localhost:8000/api/meters?page=324'
                  next_page_url:
                    type: string
                    example: 'http://localhost:8000/api/meters?page=2'
                  path:
                    type: string
                    example: 'http://localhost:8000/api/meters'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 15
                  total:
                    type: integer
                    example: 4852
      tags:
        - Endpoints
      security: []
    post:
      summary: "Create\nStores a new meter."
      operationId: createStoresANewMeter
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                serial_number:
                  type: string
                  description: ''
                  example: minus
                  nullable: false
                manufacturer_id:
                  type: integer
                  description: ''
                  example: 14
                  nullable: false
                meter_type_id:
                  type: integer
                  description: ''
                  example: 5
                  nullable: false
              required:
                - serial_number
                - manufacturer_id
                - meter_type_id
      security: []
    put:
      summary: "Update\nUpdates the geo coordinates of the meter."
      operationId: updateUpdatesTheGeoCoordinatesOfTheMeter
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                points:
                  type: string.
                  description: 'Comma seperated latitude and longitude. Example 1,2'
                  example: accusantium
                  nullable: false
      security: []
    parameters:
      -
        in: path
        name: page
        description: 'Optional parameter.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
      -
        in: path
        name: in_use
        description: 'Optional parameter. to list wether used or all meters'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 16
  '/api/meters/{meter_id}':
    put:
      summary: ''
      operationId: putApiMetersMeter_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 31.2447
                  nullable: false
                serial_number:
                  type: string
                  description: ''
                  example: vel
                  nullable: false
                meter_type_id:
                  type: number
                  description: ''
                  example: 15231849.871
                  nullable: false
                in_use:
                  type: number
                  description: ''
                  example: 10378747.0
                  nullable: false
                manufacturer_id:
                  type: number
                  description: ''
                  example: 434028.551
                  nullable: false
                connection_type_id:
                  type: number
                  description: ''
                  example: 68226339.76392
                  nullable: false
                connection_group_id:
                  type: number
                  description: ''
                  example: 2282906.1
                  nullable: false
                tariff_id:
                  type: number
                  description: ''
                  example: 96899211.82334
                  nullable: false
              required:
                - id
      security: []
    parameters:
      -
        in: path
        name: meter_id
        description: 'The ID of the meter.'
        example: 1
        required: true
        schema:
          type: integer
  /api/meters/search:
    get:
      summary: "Search\nThe search term will be searched in following fields\n- Tariff.name\n- Serial number."
      operationId: searchTheSearchTermWillBeSearchedInFollowingFieldsTariffnameSerialNumber
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data:
                    -
                      id: 1
                      serial_number: '11213312'
                      meter_type_id: 1
                      in_use: 1
                      manufacturer_id: 1
                      created_at: '2018-06-22 11:50:09'
                      updated_at: '2018-12-17 14:20:23'
                      deleted_at: null
                      meter_type:
                        id: 1
                        online: 0
                        phase: 1
                        max_current: 10
                        created_at: '2018-06-22 08:15:12'
                        updated_at: '2018-06-22 08:15:12'
                      meter_parameter:
                        id: 1
                        connection_type_id: 1
                        created_at: '2018-06-22 11:59:46'
                        updated_at: '2018-12-17 14:20:23'
                        connection_group_id: 1
                        tariff:
                          id: 1
                          name: 'Productive User'
                          price: 200
                          currency: EUR
                          factor: 1
                          created_at: '2018-07-27 15:32:42'
                          updated_at: '2018-07-27 15:32:42'
                          deleted_at: null
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        serial_number: '11213312'
                        meter_type_id: 1
                        in_use: 1
                        manufacturer_id: 1
                        created_at: '2018-06-22 11:50:09'
                        updated_at: '2018-12-17 14:20:23'
                        deleted_at: null
                        meter_type:
                          id: 1
                          online: 0
                          phase: 1
                          max_current: 10
                          created_at: '2018-06-22 08:15:12'
                          updated_at: '2018-06-22 08:15:12'
                        meter_parameter:
                          id: 1
                          connection_type_id: 1
                          created_at: '2018-06-22 11:59:46'
                          updated_at: '2018-12-17 14:20:23'
                          connection_group_id: 1
                          tariff:
                            id: 1
                            name: 'Productive User'
                            price: 200
                            currency: EUR
                            factor: 1
                            created_at: '2018-07-27 15:32:42'
                            updated_at: '2018-07-27 15:32:42'
                            deleted_at: null
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        serial_number:
                          type: string
                          example: '11213312'
                        meter_type_id:
                          type: integer
                          example: 1
                        in_use:
                          type: integer
                          example: 1
                        manufacturer_id:
                          type: integer
                          example: 1
                        created_at:
                          type: string
                          example: '2018-06-22 11:50:09'
                        updated_at:
                          type: string
                          example: '2018-12-17 14:20:23'
                        deleted_at:
                          type: string
                          example: null
                        meter_type:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            online:
                              type: integer
                              example: 0
                            phase:
                              type: integer
                              example: 1
                            max_current:
                              type: integer
                              example: 10
                            created_at:
                              type: string
                              example: '2018-06-22 08:15:12'
                            updated_at:
                              type: string
                              example: '2018-06-22 08:15:12'
                        meter_parameter:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            connection_type_id:
                              type: integer
                              example: 1
                            created_at:
                              type: string
                              example: '2018-06-22 11:59:46'
                            updated_at:
                              type: string
                              example: '2018-12-17 14:20:23'
                            connection_group_id:
                              type: integer
                              example: 1
                            tariff:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 1
                                name:
                                  type: string
                                  example: 'Productive User'
                                price:
                                  type: integer
                                  example: 200
                                currency:
                                  type: string
                                  example: EUR
                                factor:
                                  type: integer
                                  example: 1
                                created_at:
                                  type: string
                                  example: '2018-07-27 15:32:42'
                                updated_at:
                                  type: string
                                  example: '2018-07-27 15:32:42'
                                deleted_at:
                                  type: string
                                  example: null
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                term:
                  type: string
                  description: ''
                  example: qui
                  nullable: false
              required:
                - term
      security: []
  '/api/meters/{serialNumber}':
    get:
      summary: "Detail\nDetailed meter with following relations\n- MeterParameter.tariff\n- MeterParameter.owner\n- Meter Type\n- MeterParameter.connectionType\n- MeterParameter.connectionGroup\n- Manufacturer."
      operationId: detailDetailedMeterWithFollowingRelationsMeterParametertariffMeterParameterownerMeterTypeMeterParameterconnectionTypeMeterParameterconnectionGroupManufacturer
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 3
                    serial_number: '123123123'
                    meter_type_id: 2
                    in_use: 1
                    manufacturer_id: 1
                    created_at: '2018-06-22 12:27:29'
                    updated_at: '2018-12-05 11:50:31'
                    deleted_at: null
                    meter_parameter:
                      id: 3
                      connection_type_id: 17
                      created_at: '2018-06-22 12:27:58'
                      updated_at: '2019-06-18 09:33:42'
                      connection_group_id: 19
                      tariff:
                        id: 4
                        name: 'Productive Usage'
                        price: 350
                        currency: EUR
                        factor: 1
                        created_at: '2019-01-18 09:17:30'
                        updated_at: '2019-01-18 09:17:30'
                        deleted_at: null
                      owner:
                        id: 3
                        title: Mr
                        education: '-'
                        name: John
                        surname: Doe
                        birth_date: '1970-01-01'
                        sex: male
                        nationality: 215
                        created_at: '2018-06-22 12:27:00'
                        updated_at: '2020-03-23 10:49:49'
                        customer_group_id: null
                        is_customer: 1
                        deleted_at: null
                      connection_type:
                        id: 17
                        name: 'House Hold'
                        connection_type_id: 1
                        tariff_id: 2
                        created_at: null
                        updated_at: null
                      connection_group:
                        id: 19
                        name: Mills
                        created_at: '2019-06-17 16:22:53'
                        updated_at: '2019-06-17 16:22:53'
                    meter_type:
                      id: 2
                      online: 0
                      phase: 3
                      max_current: 20
                      created_at: '2018-07-27 10:25:15'
                      updated_at: '2018-07-27 10:25:15'
                    manufacturer:
                      id: 1
                      name: 'Calin Meters'
                      website: 'http://www.calinmeter.com/'
                      contact_person: null
                      created_at: '2018-06-22 08:14:26'
                      updated_at: '2018-06-22 08:14:26'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 3
                      serial_number:
                        type: string
                        example: '123123123'
                      meter_type_id:
                        type: integer
                        example: 2
                      in_use:
                        type: integer
                        example: 1
                      manufacturer_id:
                        type: integer
                        example: 1
                      created_at:
                        type: string
                        example: '2018-06-22 12:27:29'
                      updated_at:
                        type: string
                        example: '2018-12-05 11:50:31'
                      deleted_at:
                        type: string
                        example: null
                      meter_parameter:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 3
                          connection_type_id:
                            type: integer
                            example: 17
                          created_at:
                            type: string
                            example: '2018-06-22 12:27:58'
                          updated_at:
                            type: string
                            example: '2019-06-18 09:33:42'
                          connection_group_id:
                            type: integer
                            example: 19
                          tariff:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 4
                              name:
                                type: string
                                example: 'Productive Usage'
                              price:
                                type: integer
                                example: 350
                              currency:
                                type: string
                                example: EUR
                              factor:
                                type: integer
                                example: 1
                              created_at:
                                type: string
                                example: '2019-01-18 09:17:30'
                              updated_at:
                                type: string
                                example: '2019-01-18 09:17:30'
                              deleted_at:
                                type: string
                                example: null
                          owner:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 3
                              title:
                                type: string
                                example: Mr
                              education:
                                type: string
                                example: '-'
                              name:
                                type: string
                                example: John
                              surname:
                                type: string
                                example: Doe
                              birth_date:
                                type: string
                                example: '1970-01-01'
                              sex:
                                type: string
                                example: male
                              nationality:
                                type: integer
                                example: 215
                              created_at:
                                type: string
                                example: '2018-06-22 12:27:00'
                              updated_at:
                                type: string
                                example: '2020-03-23 10:49:49'
                              customer_group_id:
                                type: string
                                example: null
                              is_customer:
                                type: integer
                                example: 1
                              deleted_at:
                                type: string
                                example: null
                          connection_type:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 17
                              name:
                                type: string
                                example: 'House Hold'
                              connection_type_id:
                                type: integer
                                example: 1
                              tariff_id:
                                type: integer
                                example: 2
                              created_at:
                                type: string
                                example: null
                              updated_at:
                                type: string
                                example: null
                          connection_group:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 19
                              name:
                                type: string
                                example: Mills
                              created_at:
                                type: string
                                example: '2019-06-17 16:22:53'
                              updated_at:
                                type: string
                                example: '2019-06-17 16:22:53'
                      meter_type:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 2
                          online:
                            type: integer
                            example: 0
                          phase:
                            type: integer
                            example: 3
                          max_current:
                            type: integer
                            example: 20
                          created_at:
                            type: string
                            example: '2018-07-27 10:25:15'
                          updated_at:
                            type: string
                            example: '2018-07-27 10:25:15'
                      manufacturer:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: 'Calin Meters'
                          website:
                            type: string
                            example: 'http://www.calinmeter.com/'
                          contact_person:
                            type: string
                            example: null
                          created_at:
                            type: string
                            example: '2018-06-22 08:14:26'
                          updated_at:
                            type: string
                            example: '2018-06-22 08:14:26'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: serialNumber
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: in
  '/api/meters/{meterId}':
    delete:
      summary: "Delete\nDeletes the meter with its all releations."
      operationId: deleteDeletesTheMeterWithItsAllReleations
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: meterId
        description: ''
        example: est
        required: true
        schema:
          type: string
      -
        in: path
        name: The
        description: 'Optional parameter. ID of the meter to be delete'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: ut
  '/api/meters/{serialNumber}/transactions':
    get:
      summary: ''
      operationId: getApiMetersSerialNumberTransactions
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: serialNumber
        description: ''
        example: labore
        required: true
        schema:
          type: string
  '/api/meters/{serialNumber}/consumptions/{start}/{end}':
    get:
      summary: "Consumption List\nIf the meter has the ability to send data to your server. That is the endpoint where you get the\nmeter readings ( used energy, credit on meter etc.)."
      operationId: consumptionListIfTheMeterHasTheAbilityToSendDataToYourServerThatIsTheEndpointWhereYouGetThemeterReadingsUsedEnergyCreditOnMeterEtc
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 7
                      meter_id: 165
                      total_consumption: 64.31
                      consumption: 64.31
                      credit_on_meter: 0.81
                      reading_date: '2018-10-03'
                      created_at: '2018-11-26 14:27:39'
                      updated_at: '2018-11-26 14:27:39'
                    -
                      id: 13
                      meter_id: 165
                      total_consumption: 67.58
                      consumption: 3.27
                      credit_on_meter: 6.82
                      reading_date: '2018-10-04'
                      created_at: '2018-11-26 14:28:55'
                      updated_at: '2018-11-26 14:28:55'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 7
                        meter_id: 165
                        total_consumption: 64.31
                        consumption: 64.31
                        credit_on_meter: 0.81
                        reading_date: '2018-10-03'
                        created_at: '2018-11-26 14:27:39'
                        updated_at: '2018-11-26 14:27:39'
                      -
                        id: 13
                        meter_id: 165
                        total_consumption: 67.58
                        consumption: 3.27
                        credit_on_meter: 6.82
                        reading_date: '2018-10-04'
                        created_at: '2018-11-26 14:28:55'
                        updated_at: '2018-11-26 14:28:55'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 7
                        meter_id:
                          type: integer
                          example: 165
                        total_consumption:
                          type: number
                          example: 64.31
                        consumption:
                          type: number
                          example: 64.31
                        credit_on_meter:
                          type: number
                          example: 0.81
                        reading_date:
                          type: string
                          example: '2018-10-03'
                        created_at:
                          type: string
                          example: '2018-11-26 14:27:39'
                        updated_at:
                          type: string
                          example: '2018-11-26 14:27:39'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: serialNumber
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: ipsa
      -
        in: path
        name: start
        description: 'Optional parameter. YYYY-mm-dd format'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: consectetur
      -
        in: path
        name: end
        description: 'Optional parameter. YYYY-mm-dd format'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: et
  '/api/meters/{miniGrid}/geoList':
    get:
      summary: "List with geo and access rate\nA list of meters with their positions and access rate payments\nThe list is not paginated."
      operationId: listWithGeoAndAccessRateAListOfMetersWithTheirPositionsAndAccessRatePaymentsTheListIsNotPaginated
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      serial_number: '47000124512'
                      meter_type_id: 1
                      in_use: 1
                      manufacturer_id: 1
                      created_at: '2018-06-22 11:50:09'
                      updated_at: '2018-12-17 14:20:23'
                      deleted_at: null
                      meter_parameter:
                        id: 1
                        connection_type_id: 1
                        created_at: '2018-06-22 11:59:46'
                        updated_at: '2018-12-17 14:20:23'
                        connection_group_id: 1
                        address:
                          id: 25504
                          is_primary: 0
                          email: null
                          phone: null
                          street: null
                          city_id: 1
                          geo_id: 1
                          created_at: '2020-01-09 07:05:49'
                          updated_at: '2020-01-09 07:05:49'
                          geo:
                            id: 1
                            owner_id: 1
                            owner_type: meter_parameter
                            points: '-1.8733656526963,33.03208090947'
                            created_at: '2018-06-22 08:59:46'
                            updated_at: '2019-08-09 09:47:54'
                      access_rate_payment:
                        id: 1
                        meter_id: 1
                        access_rate_id: 1
                        due_date: '2020-03-01 18:00:02'
                        debt: 589500
                        unpaid_in_row: 73
                        created_at: '2018-07-27 15:46:09'
                        updated_at: '2020-02-23 18:00:02'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        serial_number: '47000124512'
                        meter_type_id: 1
                        in_use: 1
                        manufacturer_id: 1
                        created_at: '2018-06-22 11:50:09'
                        updated_at: '2018-12-17 14:20:23'
                        deleted_at: null
                        meter_parameter:
                          id: 1
                          connection_type_id: 1
                          created_at: '2018-06-22 11:59:46'
                          updated_at: '2018-12-17 14:20:23'
                          connection_group_id: 1
                          address:
                            id: 25504
                            is_primary: 0
                            email: null
                            phone: null
                            street: null
                            city_id: 1
                            geo_id: 1
                            created_at: '2020-01-09 07:05:49'
                            updated_at: '2020-01-09 07:05:49'
                            geo:
                              id: 1
                              owner_id: 1
                              owner_type: meter_parameter
                              points: '-1.8733656526963,33.03208090947'
                              created_at: '2018-06-22 08:59:46'
                              updated_at: '2019-08-09 09:47:54'
                        access_rate_payment:
                          id: 1
                          meter_id: 1
                          access_rate_id: 1
                          due_date: '2020-03-01 18:00:02'
                          debt: 589500
                          unpaid_in_row: 73
                          created_at: '2018-07-27 15:46:09'
                          updated_at: '2020-02-23 18:00:02'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        serial_number:
                          type: string
                          example: '47000124512'
                        meter_type_id:
                          type: integer
                          example: 1
                        in_use:
                          type: integer
                          example: 1
                        manufacturer_id:
                          type: integer
                          example: 1
                        created_at:
                          type: string
                          example: '2018-06-22 11:50:09'
                        updated_at:
                          type: string
                          example: '2018-12-17 14:20:23'
                        deleted_at:
                          type: string
                          example: null
                        meter_parameter:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            connection_type_id:
                              type: integer
                              example: 1
                            created_at:
                              type: string
                              example: '2018-06-22 11:59:46'
                            updated_at:
                              type: string
                              example: '2018-12-17 14:20:23'
                            connection_group_id:
                              type: integer
                              example: 1
                            address:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 25504
                                is_primary:
                                  type: integer
                                  example: 0
                                email:
                                  type: string
                                  example: null
                                phone:
                                  type: string
                                  example: null
                                street:
                                  type: string
                                  example: null
                                city_id:
                                  type: integer
                                  example: 1
                                geo_id:
                                  type: integer
                                  example: 1
                                created_at:
                                  type: string
                                  example: '2020-01-09 07:05:49'
                                updated_at:
                                  type: string
                                  example: '2020-01-09 07:05:49'
                                geo:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      example: 1
                                    owner_id:
                                      type: integer
                                      example: 1
                                    owner_type:
                                      type: string
                                      example: meter_parameter
                                    points:
                                      type: string
                                      example: '-1.8733656526963,33.03208090947'
                                    created_at:
                                      type: string
                                      example: '2018-06-22 08:59:46'
                                    updated_at:
                                      type: string
                                      example: '2019-08-09 09:47:54'
                        access_rate_payment:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            meter_id:
                              type: integer
                              example: 1
                            access_rate_id:
                              type: integer
                              example: 1
                            due_date:
                              type: string
                              example: '2020-03-01 18:00:02'
                            debt:
                              type: integer
                              example: 589500
                            unpaid_in_row:
                              type: integer
                              example: 73
                            created_at:
                              type: string
                              example: '2018-07-27 15:46:09'
                            updated_at:
                              type: string
                              example: '2020-02-23 18:00:02'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: miniGrid
        description: ''
        example: dolor
        required: true
        schema:
          type: string
      -
        in: path
        name: mini_grid_id
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: fugit
  '/api/meter-types/{meterTypeId}/list':
    get:
      summary: "List with Meters\nDisplays the meter types with the associated meters."
      operationId: listWithMetersDisplaysTheMeterTypesWithTheAssociatedMeters
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    online: 0
                    phase: 1
                    max_current: 10
                    created_at: '2018-06-22 08:15:12'
                    updated_at: '2018-06-22 08:15:12'
                    meters:
                      -
                        id: 1
                        serial_number: '1231321231'
                        meter_type_id: 1
                        in_use: 1
                        manufacturer_id: 1
                        created_at: '2018-06-22 11:50:09'
                        updated_at: '2018-12-17 14:20:23'
                        deleted_at: null
                      -
                        id: 4
                        serial_number: '23123123132'
                        meter_type_id: 1
                        in_use: 1
                        manufacturer_id: 1
                        created_at: '2018-06-22 15:43:32'
                        updated_at: '2018-06-22 15:43:37'
                        deleted_at: null
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      online:
                        type: integer
                        example: 0
                      phase:
                        type: integer
                        example: 1
                      max_current:
                        type: integer
                        example: 10
                      created_at:
                        type: string
                        example: '2018-06-22 08:15:12'
                      updated_at:
                        type: string
                        example: '2018-06-22 08:15:12'
                      meters:
                        type: array
                        example:
                          -
                            id: 1
                            serial_number: '1231321231'
                            meter_type_id: 1
                            in_use: 1
                            manufacturer_id: 1
                            created_at: '2018-06-22 11:50:09'
                            updated_at: '2018-12-17 14:20:23'
                            deleted_at: null
                          -
                            id: 4
                            serial_number: '23123123132'
                            meter_type_id: 1
                            in_use: 1
                            manufacturer_id: 1
                            created_at: '2018-06-22 15:43:32'
                            updated_at: '2018-06-22 15:43:37'
                            deleted_at: null
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            serial_number:
                              type: string
                              example: '1231321231'
                            meter_type_id:
                              type: integer
                              example: 1
                            in_use:
                              type: integer
                              example: 1
                            manufacturer_id:
                              type: integer
                              example: 1
                            created_at:
                              type: string
                              example: '2018-06-22 11:50:09'
                            updated_at:
                              type: string
                              example: '2018-12-17 14:20:23'
                            deleted_at:
                              type: string
                              example: null
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: meterTypeId
        description: ''
        example: quia
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: ''
        example: aliquam
        required: true
        schema:
          type: string
  /api/addresses:
    get:
      summary: ''
      operationId: getApiAddresses
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/addresses/{id}':
    get:
      summary: ''
      operationId: getApiAddressesId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the address.'
        example: minus
        required: true
        schema:
          type: string
  /api/transactions:
    get:
      summary: ''
      operationId: getApiTransactions
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/transactions/{id}':
    get:
      summary: ''
      operationId: getApiTransactionsId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the transaction.'
        example: '1'
        required: true
        schema:
          type: string
  /api/transaction-providers:
    get:
      summary: ''
      operationId: getApiTransactionProviders
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/transactions/analytics/{period}':
    get:
      summary: ''
      operationId: getApiTransactionsAnalyticsPeriod
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: period
        description: ''
        example: '3123'
        required: true
        schema:
          type: string
  /api/transactions/advanced:
    get:
      summary: ''
      operationId: getApiTransactionsAdvanced
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/app/agents/firebase:
    post:
      summary: ''
      operationId: postApiAppAgentsFirebase
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/app/agents/balance:
    get:
      summary: ''
      operationId: getApiAppAgentsBalance
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/app/agents/customers:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/app/agents/customers/search:
    get:
      summary: ''
      operationId: getApiAppAgentsCustomersSearch
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/app/agents/customers/{customerId}/graph/{period}/{limit}/{order}':
    get:
      summary: ''
      operationId: getApiAppAgentsCustomersCustomerIdGraphPeriodLimitOrder
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: customerId
        description: ''
        example: '5'
        required: true
        schema:
          type: string
      -
        in: path
        name: period
        description: ''
        example: autem
        required: true
        schema:
          type: string
      -
        in: path
        name: limit
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: similique
      -
        in: path
        name: order
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: non
  '/api/app/agents/customers/graph/{period}/{limit}/{order}':
    get:
      summary: ''
      operationId: getApiAppAgentsCustomersGraphPeriodLimitOrder
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: period
        description: ''
        example: reprehenderit
        required: true
        schema:
          type: string
      -
        in: path
        name: limit
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: cupiditate
      -
        in: path
        name: order
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: et
  /api/app/agents/transactions:
    get:
      summary: ''
      operationId: getApiAppAgentsTransactions
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/app/agents/transactions/{customerId}':
    get:
      summary: ''
      operationId: getApiAppAgentsTransactionsCustomerId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: customerId
        description: ''
        example: iure
        required: true
        schema:
          type: string
  /api/app/agents/appliances:
    get:
      summary: ''
      operationId: getApiAppAgentsAppliances
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                person_id:
                  type: string
                  description: ''
                  example: similique
                  nullable: false
                down_payment:
                  type: number
                  description: ''
                  example: 11565.26646602
                  nullable: false
                tenure:
                  type: number
                  description: validation.min.
                  example: 15
                  nullable: false
                first_payment_date:
                  type: string
                  description: ''
                  example: assumenda
                  nullable: false
                agent_assigned_appliance_id:
                  type: string
                  description: ''
                  example: et
                  nullable: false
              required:
                - person_id
                - down_payment
                - tenure
                - first_payment_date
                - agent_assigned_appliance_id
      security: []
  '/api/app/agents/appliances/{customerId}':
    get:
      summary: ''
      operationId: getApiAppAgentsAppliancesCustomerId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: customerId
        description: ''
        example: amet
        required: true
        schema:
          type: string
  /api/app/agents/ticket:
    get:
      summary: ''
      operationId: getApiAppAgentsTicket
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiAppAgentsTicket
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: string
                  description: ''
                  example: recusandae
                  nullable: false
                title:
                  type: string
                  description: ''
                  example: nisi
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: adipisci
                  nullable: false
              required:
                - owner_id
                - title
                - description
      security: []
  '/api/app/agents/ticket/{ticketId}':
    get:
      summary: ''
      operationId: getApiAppAgentsTicketTicketId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: ticketId
        description: ''
        example: quasi
        required: true
        schema:
          type: string
  '/api/app/agents/ticket/customer/{customerId}':
    get:
      summary: ''
      operationId: getApiAppAgentsTicketCustomerCustomerId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: customerId
        description: ''
        example: occaecati
        required: true
        schema:
          type: string
  /api/app/agents/dashboard/boxes:
    get:
      summary: ''
      operationId: getApiAppAgentsDashboardBoxes
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/app/agents/dashboard/graph:
    get:
      summary: ''
      operationId: getApiAppAgentsDashboardGraph
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/app/agents/dashboard/revenue:
    get:
      summary: ''
      operationId: getApiAppAgentsDashboardRevenue
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/agents:
    get:
      summary: ''
      operationId: getApiAgents
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiAgents
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: et
                  nullable: false
                name:
                  type: string
                  description: validation.min.
                  example: eorebpgdlmvlqriclbcvtmcojqloywmoxmkmvjnqsyktgzpovntvjoexkrzhvyutolhpr
                  nullable: false
                surname:
                  type: string
                  description: validation.min.
                  example: whsmkqlwtrzlfqhtoiaemijiiphkjkcrkqntctriocpztnvcelupybrzbvqctmlbvqne
                  nullable: false
                password:
                  type: string
                  description: validation.min.
                  example: 'V]ei_QII~;~%7^/C'
                  nullable: false
                city_id:
                  type: string
                  description: ''
                  example: alias
                  nullable: false
                agent_commission_id:
                  type: string
                  description: ''
                  example: quia
                  nullable: false
              required:
                - email
                - name
                - surname
                - password
                - city_id
                - agent_commission_id
      security: []
  '/api/agents/{agentId}':
    get:
      summary: ''
      operationId: getApiAgentsAgentId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiAgentsAgentId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiAgentsAgentId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: agentId
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  /api/agents/search:
    get:
      summary: ''
      operationId: getApiAgentsSearch
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/agents/reset-password:
    post:
      summary: ''
      operationId: postApiAgentsResetPassword
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/agents/assigned:
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                agent_id:
                  type: integer
                  description: ''
                  example: 9
                  nullable: false
                user_id:
                  type: integer
                  description: ''
                  example: 4
                  nullable: false
                appliance_id:
                  type: string
                  description: ''
                  example: qui
                  nullable: false
                cost:
                  type: integer
                  description: ''
                  example: 2
                  nullable: false
                appliance_type_id:
                  type: integer
                  description: ''
                  example: 11
                  nullable: false
              required:
                - agent_id
                - user_id
                - appliance_id
                - cost
                - appliance_type_id
      security: []
  '/api/agents/assigned/{agentId}':
    get:
      summary: 'List for Web interface.'
      operationId: listForWebInterface
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: agentId
        description: ''
        example: reiciendis
        required: true
        schema:
          type: string
  '/api/agents/sold/{agentId}':
    get:
      summary: ''
      operationId: getApiAgentsSoldAgentId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: agentId
        description: ''
        example: illo
        required: true
        schema:
          type: string
  /api/agents/commissions:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: voluptatum
                  nullable: false
                energy_commission:
                  type: number
                  description: ''
                  example: 5.74
                  nullable: false
                appliance_commission:
                  type: number
                  description: ''
                  example: 132559355.0
                  nullable: false
                risk_balance:
                  type: number
                  description: validation.max.
                  example: 11.92
                  nullable: false
              required:
                - name
                - energy_commission
                - appliance_commission
                - risk_balance
      security: []
  '/api/agents/commissions/{agentCommissionId}':
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: ducimus
                  nullable: false
                energy_commission:
                  type: number
                  description: ''
                  example: 2.436
                  nullable: false
                appliance_commission:
                  type: number
                  description: ''
                  example: 60614612.2
                  nullable: false
                risk_balance:
                  type: number
                  description: validation.max.
                  example: 47.0
                  nullable: false
              required:
                - name
                - energy_commission
                - appliance_commission
                - risk_balance
      security: []
    parameters:
      -
        in: path
        name: agentCommissionId
        description: ''
        example: omnis
        required: true
        schema:
          type: string
  /api/agents/receipt:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                agent_id:
                  type: string
                  description: ''
                  example: itaque
                  nullable: false
                amount:
                  type: string
                  description: ''
                  example: asperiores
                  nullable: false
              required:
                - agent_id
                - amount
      security: []
  '/api/agents/receipt/{agentId}':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: agentId
        description: ''
        example: ratione
        required: true
        schema:
          type: string
  '/api/agents/transactions/{agentId}':
    get:
      summary: ''
      operationId: getApiAgentsTransactionsAgentId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: agentId
        description: ''
        example: '8'
        required: true
        schema:
          type: string
  '/api/agents/balance/history/{agentId}':
    get:
      summary: ''
      operationId: getApiAgentsBalanceHistoryAgentId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: agentId
        description: ''
        example: 12
        required: true
        schema:
          type: integer
  /api/agents/charge:
    post:
      summary: ''
      operationId: postApiAgentsCharge
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                agent_id:
                  type: string
                  description: ''
                  example: at
                  nullable: false
                amount:
                  type: number
                  description: ''
                  example: 268163.4556725
                  nullable: false
              required:
                - agent_id
                - amount
      security: []
  /api/customer-registration-app/manufacturers:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/customer-registration-app/tariffs:
    get:
      summary: "List\na list of all tariffs."
      operationId: listaListOfAllTariffs
      description: 'The list is paginated and each page contains 15 results.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data:
                    -
                      id: 1
                      name: 'Productive Usage'
                      price: 350
                      currency: EUR
                      factor: 1
                      created_at: '2018-07-27 15:32:42'
                      updated_at: '2018-07-27 15:32:42'
                      deleted_at: null
                      access_rate:
                        id: 1
                        tariff_id: 1
                        amount: 10000
                        period: 7
                        created_at: '2018-07-27 15:32:42'
                        updated_at: '2018-07-27 15:32:42'
                    -
                      id: 2
                      name: 'House Hold'
                      price: 450
                      currency: EUR
                      factor: 1
                      created_at: '2018-07-27 15:32:59'
                      updated_at: '2018-07-27 15:32:59'
                      deleted_at: null
                      access_rate:
                        id: 2
                        tariff_id: 2
                        amount: 0
                        period: 7
                        created_at: '2018-07-27 15:32:59'
                        updated_at: '2018-07-27 15:32:59'
                    -
                      id: 3
                      name: 'Comercial Usage'
                      price: 550
                      currency: EUR
                      factor: 1
                      created_at: '2018-07-27 15:33:09'
                      updated_at: '2018-07-27 15:33:09'
                      deleted_at: null
                      access_rate:
                        id: 3
                        tariff_id: 3
                        amount: 0
                        period: 7
                        created_at: '2018-07-27 15:33:09'
                        updated_at: '2018-07-27 15:33:09'
                  first_page_url: 'http://localhost:8000/api/tariffs?page=1'
                  from: 1
                  last_page: 1
                  last_page_url: 'http://localhost:8000/api/tariffs?page=1'
                  next_page_url: null
                  path: 'http://localhost:8000/api/tariffs'
                  per_page: 15
                  prev_page_url: null
                  to: 4
                  total: 4
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Productive Usage'
                        price: 350
                        currency: EUR
                        factor: 1
                        created_at: '2018-07-27 15:32:42'
                        updated_at: '2018-07-27 15:32:42'
                        deleted_at: null
                        access_rate:
                          id: 1
                          tariff_id: 1
                          amount: 10000
                          period: 7
                          created_at: '2018-07-27 15:32:42'
                          updated_at: '2018-07-27 15:32:42'
                      -
                        id: 2
                        name: 'House Hold'
                        price: 450
                        currency: EUR
                        factor: 1
                        created_at: '2018-07-27 15:32:59'
                        updated_at: '2018-07-27 15:32:59'
                        deleted_at: null
                        access_rate:
                          id: 2
                          tariff_id: 2
                          amount: 0
                          period: 7
                          created_at: '2018-07-27 15:32:59'
                          updated_at: '2018-07-27 15:32:59'
                      -
                        id: 3
                        name: 'Comercial Usage'
                        price: 550
                        currency: EUR
                        factor: 1
                        created_at: '2018-07-27 15:33:09'
                        updated_at: '2018-07-27 15:33:09'
                        deleted_at: null
                        access_rate:
                          id: 3
                          tariff_id: 3
                          amount: 0
                          period: 7
                          created_at: '2018-07-27 15:33:09'
                          updated_at: '2018-07-27 15:33:09'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Productive Usage'
                        price:
                          type: integer
                          example: 350
                        currency:
                          type: string
                          example: EUR
                        factor:
                          type: integer
                          example: 1
                        created_at:
                          type: string
                          example: '2018-07-27 15:32:42'
                        updated_at:
                          type: string
                          example: '2018-07-27 15:32:42'
                        deleted_at:
                          type: string
                          example: null
                        access_rate:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            tariff_id:
                              type: integer
                              example: 1
                            amount:
                              type: integer
                              example: 10000
                            period:
                              type: integer
                              example: 7
                            created_at:
                              type: string
                              example: '2018-07-27 15:32:42'
                            updated_at:
                              type: string
                              example: '2018-07-27 15:32:42'
                  first_page_url:
                    type: string
                    example: 'http://localhost:8000/api/tariffs?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'http://localhost:8000/api/tariffs?page=1'
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'http://localhost:8000/api/tariffs'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 4
                  total:
                    type: integer
                    example: 4
      tags:
        - Endpoints
      security: []
  /api/customer-registration-app/cities:
    get:
      summary: ''
      operationId: getApiCustomerRegistrationAppCities
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/customer-registration-app/connection-groups:
    get:
      summary: ''
      operationId: getApiCustomerRegistrationAppConnectionGroups
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/customer-registration-app/connection-types:
    get:
      summary: ''
      operationId: getApiCustomerRegistrationAppConnectionTypes
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/customer-registration-app/sub-connection-types:
    get:
      summary: ''
      operationId: getApiCustomerRegistrationAppSubConnectionTypes
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/customer-registration-app:
    post:
      summary: ''
      operationId: postApiCustomerRegistrationApp
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: validation.min.
                  example: tugzhjwvplxslwqyplzckidwwmlkuurqacnqfvfptjkhvybtndqwilfieqnwsyjiaiwftcgncqzhtxseskprqynft
                  nullable: false
                surname:
                  type: string
                  description: validation.min.
                  example: kgdtfkcipxzjwhbzglpwchfetkjacdamwaamubwxjiolaondhsgwjazyrpplbickvf
                  nullable: false
                phone:
                  type: number
                  description: 'Must match the regex (^\+). validation.min.'
                  example: 17
                  nullable: false
                tariff_id:
                  type: string
                  description: ''
                  example: totam
                  nullable: false
                geo_points:
                  type: string
                  description: ''
                  example: nulla
                  nullable: false
                serial_number:
                  type: string
                  description: ''
                  example: aspernatur
                  nullable: false
                manufacturer:
                  type: string
                  description: ''
                  example: consequuntur
                  nullable: false
                meter_type:
                  type: string
                  description: ''
                  example: eum
                  nullable: false
              required:
                - name
                - surname
                - phone
                - tariff_id
                - geo_points
                - serial_number
                - manufacturer
                - meter_type
      security: []
  /api/users:
    post:
      summary: ''
      operationId: postApiUsers
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: omnis
                  nullable: false
                name:
                  type: string
                  description: validation.min.
                  example: fdxvsikkbwezxmkprqspxxamsgtkzoroyxsxbcfgmlihmvfejpwntmudbgvkhjkhmduwedsugusqilxeerit
                  nullable: false
                password:
                  type: string
                  description: validation.min.
                  example: "NB&zUsad['Tm@"
                  nullable: false
              required:
                - email
                - name
                - password
      security: []
    get:
      summary: ''
      operationId: getApiUsers
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/users/{user_id}':
    put:
      summary: ''
      operationId: putApiUsersUser_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    get:
      summary: ''
      operationId: getApiUsersUser_id
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/users/{user_id}/addresses':
    post:
      summary: ''
      operationId: postApiUsersUser_idAddresses
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                city_id:
                  type: string
                  description: ''
                  example: et
                  nullable: false
              required:
                - city_id
      security: []
    put:
      summary: ''
      operationId: putApiUsersUser_idAddresses
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                city_id:
                  type: string
                  description: ''
                  example: dicta
                  nullable: false
              required:
                - city_id
      security: []
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/users/password/{user_id}':
    put:
      summary: ''
      operationId: putApiUsersPasswordUser_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: 'validation.min validation.max.'
                  example: 'ec*#|18EP4>Qk&'
                  nullable: false
                confirm_password:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: repellat
                  nullable: false
              required:
                - password
                - confirm_password
      security: []
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/password:
    post:
      summary: ''
      operationId: postApiUsersPassword
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: quis
                  nullable: false
              required:
                - email
      security: []
  /api/assets:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiAssets
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                asset_type_id:
                  type: string
                  description: ''
                  example: qui
                  nullable: false
                name:
                  type: string
                  description: validation.min.
                  example: oujvkavlqtanovfjmumjtoiycndgwwsw
                  nullable: false
                price:
                  type: number
                  description: validation.min.
                  example: 42
                  nullable: false
              required:
                - asset_type_id
                - name
                - price
      security: []
  '/api/assets/{asset_id}':
    put:
      summary: ''
      operationId: putApiAssetsAsset_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                asset_type_id:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                name:
                  type: string
                  description: validation.min.
                  example: xvbxhrstybulylneprxdxkuzfjlrgxzhjifjgnctlntwj
                  nullable: false
                price:
                  type: number
                  description: ''
                  example: 74199644.77
                  nullable: false
      security: []
    delete:
      summary: ''
      operationId: deleteApiAssetsAsset_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: asset_id
        description: 'The ID of the asset.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/assets/person/{asset_id}/people/{person_id}':
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: asset_id
        description: 'The ID of the asset.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: person_id
        description: 'The ID of the person.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/assets/person/people/{person_id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: person_id
        description: 'The ID of the person.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/assets/person/people/detail/{applianceId}':
    get:
      summary: ''
      operationId: getApiAssetsPersonPeopleDetailApplianceId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: applianceId
        description: ''
        example: dolorum
        required: true
        schema:
          type: string
  /api/assets/types:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: validation.min.
                  example: xtijiizveekjxgumpopxwvdaqsmnay
                  nullable: false
              required:
                - name
      security: []
  '/api/assets/types/{asset_type_id}':
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: validation.min.
                  example: kctbrfkpcvkkjmbhucghioogdebdmbsxzxxrocywsef
                  nullable: false
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: asset_type_id
        description: 'The ID of the asset type.'
        example: quidem
        required: true
        schema:
          type: string
  '/api/assets/rates/{appliance_rate_id}':
    put:
      summary: ''
      operationId: putApiAssetsRatesAppliance_rate_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: appliance_rate_id
        description: 'The ID of the appliance rate.'
        example: nam
        required: true
        schema:
          type: string
  '/api/assets/payment/{appliance_person_id}':
    post:
      summary: ''
      operationId: postApiAssetsPaymentAppliance_person_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: appliance_person_id
        description: 'The ID of the appliance person.'
        example: ullam
        required: true
        schema:
          type: string
  /api/clusters:
    get:
      summary: ''
      operationId: getApiClusters
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiClusters
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name  of the cluster.'
                  example: inventore
                  nullable: false
                geo_type:
                  type: string
                  description: 'required. Describes if the polygon created manually or fetched from the internet.'
                  example: deleniti
                  nullable: false
                geo_data:
                  type: string
                  description: 'required. Coordinates or the external url  that contains a geojson.'
                  example: vitae
                  nullable: false
                manager_id:
                  type: integer
                  description: 'required. The id of the user who is responsible for the cluster.'
                  example: 1
                  nullable: false
                cities:
                  type: 'array[int]'
                  description: "required. The id's of the cities which belong to the cluster."
                  example: dolorem
                  nullable: false
              required:
                - name
      security: []
  '/api/clusters/{clusterId}':
    get:
      summary: ''
      operationId: getApiClustersClusterId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: clusterId
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  '/api/clusters/{clusterId}/geo':
    get:
      summary: ''
      operationId: getApiClustersClusterIdGeo
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: clusterId
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  /api/clusters/revenue:
    get:
      summary: ''
      operationId: getApiClustersRevenue
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/clusters/{clusterId}/revenue':
    get:
      summary: ''
      operationId: getApiClustersClusterIdRevenue
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: clusterId
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  '/api/clusters/{clusterId}/revenue/analysis':
    get:
      summary: ''
      operationId: getApiClustersClusterIdRevenueAnalysis
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: clusterId
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  '/api/clusters/{clusterId}/cities-revenue':
    get:
      summary: ''
      operationId: getApiClustersClusterIdCitiesRevenue
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: clusterId
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  /api/dashboard/clusters:
    get:
      summary: ''
      operationId: getApiDashboardClusters
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiDashboardClusters
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/dashboard/clusters/{clusterId}':
    get:
      summary: ''
      operationId: getApiDashboardClustersClusterId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: clusterId
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  /api/dashboard/mini-grids:
    get:
      summary: ''
      operationId: getApiDashboardMiniGrids
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiDashboardMiniGrids
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/dashboard/mini-grids/{miniGridId}':
    get:
      summary: ''
      operationId: getApiDashboardMiniGridsMiniGridId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: miniGridId
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  /api/connection-groups:
    get:
      summary: ''
      operationId: getApiConnectionGroups
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiConnectionGroups
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: optio
                  nullable: false
              required:
                - name
      security: []
  '/api/connection-groups/{connectionGroupId}':
    put:
      summary: ''
      operationId: putApiConnectionGroupsConnectionGroupId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: est
                  nullable: false
              required:
                - name
      security: []
    get:
      summary: ''
      operationId: getApiConnectionGroupsConnectionGroupId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: connectionGroupId
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  /api/connection-types:
    get:
      summary: ''
      operationId: getApiConnectionTypes
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiConnectionTypes
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/connection-types/{connectionTypeId}':
    get:
      summary: ''
      operationId: getApiConnectionTypesConnectionTypeId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiConnectionTypesConnectionTypeId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: connectionTypeId
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: fugiat
  /api/maintenance:
    get:
      summary: ''
      operationId: getApiMaintenance
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/maintenance/user:
    post:
      summary: ''
      operationId: postApiMaintenanceUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: temporibus
                  nullable: false
                name:
                  type: string
                  description: validation.min.
                  example: zgwkpffdquhquuaztqgyoagvdtgxrjaotavfdxduycqpshskcpkavfurkdfsqitkehgxrgoivnlfsrnmtuyguwy
                  nullable: false
                surname:
                  type: string
                  description: validation.min.
                  example: jtaoyfpkmwdwwpifcxitiqdhxughsqplhqzejidlwqazdijaquxhthprfpqvdapazgtm
                  nullable: false
                birth_date:
                  type: string
                  description: 'Must be a valid date in the format <code>"Y-m-d</code>.'
                  example: '"2024-11-21'
                  nullable: false
                sex:
                  type: string
                  description: ''
                  example: male
                  nullable: false
                  enum:
                    - male
                    - female
                education:
                  type: string
                  description: validation.min.
                  example: ktnrztrccecwyahliqzoxnuyfhzktqdljqcfy
                  nullable: false
                city_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the shard.cities table.'
                  example: null
                  nullable: false
                street:
                  type: string
                  description: validation.min.
                  example: gwhzickzduefasewyxthkcrudmladmsafqfagsqnxvebmwhfayfjduhlvrqwqclccxqbiatdutgadevhdjhda
                  nullable: false
                email:
                  type: string
                  description: validation.email.
                  example: adelia96@example.org
                  nullable: false
                phone:
                  type: number
                  description: 'Must match the regex (^\+). validation.min.'
                  example: 32
                  nullable: false
                nationality:
                  type: string
                  description: 'The <code>country_code</code> of an existing record in the shard.countries table.'
                  example: null
                  nullable: false
              required:
                - name
                - surname
                - phone
      security: []
  /api/manufacturers:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: est
                  nullable: false
                phone:
                  type: string
                  description: ''
                  example: iste
                  nullable: false
                email:
                  type: string
                  description: validation.email.
                  example: graciela09@example.com
                  nullable: false
                contact_person:
                  type: string
                  description: validation.min.
                  example: waidbuszsofisogpmf
                  nullable: false
                website:
                  type: string
                  description: validation.min.
                  example: wtbsasslummooklhfpwngkbowkdsmwoarinflyunkizooswjktjw
                  nullable: false
                city_id:
                  type: integer
                  description: ''
                  example: 8
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: officiis
                  nullable: false
                api_name:
                  type: string
                  description: ''
                  example: null
                  nullable: false
              required:
                - name
      security: []
  '/api/manufacturers/{manufacturerId}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: manufacturerId
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  /api/mini-grids:
    get:
      summary: List.
      operationId: list
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiMiniGrids
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: validation.min.
                  example: jhjbmkjruh
                  nullable: false
                cluster_id:
                  type: string
                  description: ''
                  example: consectetur
                  nullable: false
                geo_data:
                  type: string
                  description: ''
                  example: est
                  nullable: false
              required:
                - name
                - cluster_id
                - geo_data
      security: []
  '/api/mini-grids/{miniGridId}':
    get:
      summary: Detail.
      operationId: detail
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 3
                  nullable: false
              required:
                - id
      security: []
    parameters:
      -
        in: path
        name: miniGridId
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  '/api/mini-grids/{miniGridId}/transactions':
    post:
      summary: ''
      operationId: postApiMiniGridsMiniGridIdTransactions
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: miniGridId
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  '/api/mini-grids/{miniGridId}/energy':
    post:
      summary: ''
      operationId: postApiMiniGridsMiniGridIdEnergy
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: miniGridId
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  '/api/mini-grids/{miniGridId}/devices':
    get:
      summary: ''
      operationId: getApiMiniGridsMiniGridIdDevices
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: miniGridId
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  '/api/people/{personId}/addresses':
    get:
      summary: "Addresses\nA list of registered addresses for that person."
      operationId: addressesAListOfRegisteredAddressesForThatPerson
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data:
                    -
                      id: 5
                      is_primary: 1
                      email: ''
                      phone: '+111111'
                      street: '-'
                      city_id: 1
                      geo_id: null
                      created_at: '2018-06-22 11:49:57'
                      updated_at: '2020-03-24 13:02:02'
                      city:
                        id: 1
                        name: 'Some Village'
                        country_id: 1
                        created_at: '2018-06-22 08:14:10'
                        updated_at: '2019-06-21 14:07:28'
                        cluster_id: 1
                        mini_grid_id: 1
                      geo: null
                    -
                      id: 209
                      is_primary: 0
                      email: ''
                      phone: '+11111111111'
                      street: ''
                      city_id: 1
                      geo_id: null
                      created_at: '2018-11-15 08:57:47'
                      updated_at: '2020-03-24 13:01:57'
                      city:
                        id: 1
                        name: 'Some Village'
                        country_id: 1
                        created_at: '2018-06-22 08:14:10'
                        updated_at: '2019-06-21 14:07:28'
                        cluster_id: 1
                        mini_grid_id: 1
                      geo: null
                  first_page_url: 'http://localhost:8000/api/people/1/addresses?page=1'
                  from: 1
                  last_page: 1
                  last_page_url: 'http://localhost:8000/api/people/1/addresses?page=1'
                  next_page_url: null
                  path: 'http://localhost:8000/api/people/1/addresses'
                  per_page: 5
                  prev_page_url: null
                  to: 2
                  total: 2
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 5
                        is_primary: 1
                        email: ''
                        phone: '+111111'
                        street: '-'
                        city_id: 1
                        geo_id: null
                        created_at: '2018-06-22 11:49:57'
                        updated_at: '2020-03-24 13:02:02'
                        city:
                          id: 1
                          name: 'Some Village'
                          country_id: 1
                          created_at: '2018-06-22 08:14:10'
                          updated_at: '2019-06-21 14:07:28'
                          cluster_id: 1
                          mini_grid_id: 1
                        geo: null
                      -
                        id: 209
                        is_primary: 0
                        email: ''
                        phone: '+11111111111'
                        street: ''
                        city_id: 1
                        geo_id: null
                        created_at: '2018-11-15 08:57:47'
                        updated_at: '2020-03-24 13:01:57'
                        city:
                          id: 1
                          name: 'Some Village'
                          country_id: 1
                          created_at: '2018-06-22 08:14:10'
                          updated_at: '2019-06-21 14:07:28'
                          cluster_id: 1
                          mini_grid_id: 1
                        geo: null
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 5
                        is_primary:
                          type: integer
                          example: 1
                        email:
                          type: string
                          example: ''
                        phone:
                          type: string
                          example: '+111111'
                        street:
                          type: string
                          example: '-'
                        city_id:
                          type: integer
                          example: 1
                        geo_id:
                          type: string
                          example: null
                        created_at:
                          type: string
                          example: '2018-06-22 11:49:57'
                        updated_at:
                          type: string
                          example: '2020-03-24 13:02:02'
                        city:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: 'Some Village'
                            country_id:
                              type: integer
                              example: 1
                            created_at:
                              type: string
                              example: '2018-06-22 08:14:10'
                            updated_at:
                              type: string
                              example: '2019-06-21 14:07:28'
                            cluster_id:
                              type: integer
                              example: 1
                            mini_grid_id:
                              type: integer
                              example: 1
                        geo:
                          type: string
                          example: null
                  first_page_url:
                    type: string
                    example: 'http://localhost:8000/api/people/1/addresses?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'http://localhost:8000/api/people/1/addresses?page=1'
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'http://localhost:8000/api/people/1/addresses'
                  per_page:
                    type: integer
                    example: 5
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 2
                  total:
                    type: integer
                    example: 2
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                person:
                  type: integer
                  description: 'the ID of the person.'
                  example: 2
                  nullable: false
              required:
                - person
      security: []
    post:
      summary: ''
      operationId: postApiPeoplePersonIdAddresses
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                city_id:
                  type: string
                  description: ''
                  example: dolore
                  nullable: false
              required:
                - city_id
      security: []
    put:
      summary: ''
      operationId: putApiPeoplePersonIdAddresses
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                city_id:
                  type: string
                  description: ''
                  example: suscipit
                  nullable: false
              required:
                - city_id
      security: []
    parameters:
      -
        in: path
        name: personId
        description: ''
        example: amet
        required: true
        schema:
          type: string
  /api/map-settings:
    get:
      summary: ''
      operationId: getApiMapSettings
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/map-settings/key/{key}':
    get:
      summary: ''
      operationId: getApiMapSettingsKeyKey
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: key
        description: 'The key.'
        example: pariatur
        required: true
        schema:
          type: string
  '/api/map-settings/{mapSettings}':
    put:
      summary: ''
      operationId: putApiMapSettingsMapSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: mapSettings
        description: ''
        example: asperiores
        required: true
        schema:
          type: string
  /api/ticket-settings:
    get:
      summary: ''
      operationId: getApiTicketSettings
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/ticket-settings/{ticketSettings}':
    put:
      summary: ''
      operationId: putApiTicketSettingsTicketSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: ticketSettings
        description: ''
        example: odio
        required: true
        schema:
          type: string
  /api/settings/main:
    get:
      summary: ''
      operationId: getApiSettingsMain
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/settings/main/{mainSettings_id}':
    put:
      summary: ''
      operationId: putApiSettingsMainMainSettings_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: mainSettings_id
        description: 'The ID of the mainSettings.'
        example: 1
        required: true
        schema:
          type: integer
  /api/settings/mail:
    get:
      summary: ''
      operationId: getApiSettingsMail
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiSettingsMail
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mail_host:
                  type: string
                  description: validation.min.
                  example: rwpproomqjxahm
                  nullable: false
                mail_port:
                  type: number
                  description: ''
                  example: 747248.85
                  nullable: false
                mail_encryption:
                  type: string
                  description: validation.min.
                  example: cvqugzfwbgbvxwiclowbmkgwplrsesyqoiexplwspkmwrcrjrkrtzxtgkpoiupwklmkgcluwvrdfkstavfmzp
                  nullable: false
                mail_username:
                  type: string
                  description: 'validation.email validation.min.'
                  example: akqrfacpdvwgodknizyritilmugiaiwrusmyqeycazeovcpwjvjslfsbdgoximcfqudrjyaskjksqbpifrd
                  nullable: false
                mail_password:
                  type: string
                  description: validation.min.
                  example: zyamxkti
                  nullable: false
              required:
                - mail_host
                - mail_port
                - mail_encryption
                - mail_username
                - mail_password
      security: []
  '/api/settings/mail/{mailSettings_id}':
    put:
      summary: ''
      operationId: putApiSettingsMailMailSettings_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mail_host:
                  type: string
                  description: validation.min.
                  example: cqgbtvrzpjvzpsbeprpgxjbrwnihifbdaccpungmqpnfjjsrxvzxisgerv
                  nullable: false
                mail_port:
                  type: number
                  description: ''
                  example: 0.0
                  nullable: false
                mail_encryption:
                  type: string
                  description: validation.min.
                  example: hlwqxtpmfvvtjzedmhduxcouqznutfeessgbzisauhglqxtuxqzysnquhem
                  nullable: false
                mail_username:
                  type: string
                  description: 'validation.email validation.min.'
                  example: knqgvjjkvlogybjxyjpedhijpinogetyhrqrdl
                  nullable: false
                mail_password:
                  type: string
                  description: validation.min.
                  example: fgandsywijqwbwindjeymkxnynsuxluoakaahukgnuwqwpzcwvdkvhaqycpgldgcmrdp
                  nullable: false
              required:
                - mail_host
                - mail_port
                - mail_encryption
                - mail_username
                - mail_password
      security: []
    parameters:
      -
        in: path
        name: mailSettings_id
        description: 'The ID of the mailSettings.'
        example: 1
        required: true
        schema:
          type: integer
  /api/settings/currency-list:
    get:
      summary: ''
      operationId: getApiSettingsCurrencyList
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/settings/country-list:
    get:
      summary: ''
      operationId: getApiSettingsCountryList
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/sms-body:
    get:
      summary: ''
      operationId: getApiSmsBody
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiSmsBody
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/sms-resend-information-key:
    get:
      summary: ''
      operationId: getApiSmsResendInformationKey
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/sms-resend-information-key/{smsResendInformationKey_id}':
    put:
      summary: ''
      operationId: putApiSmsResendInformationKeySmsResendInformationKey_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: smsResendInformationKey_id
        description: 'The ID of the smsResendInformationKey.'
        example: 1
        required: true
        schema:
          type: integer
  /api/sms-appliance-remind-rate:
    get:
      summary: ''
      operationId: getApiSmsApplianceRemindRate
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiSmsApplianceRemindRate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appliance_type_id:
                  type: string
                  description: ''
                  example: repellat
                  nullable: false
                overdue_remind_rate:
                  type: string
                  description: ''
                  example: quo
                  nullable: false
                remind_rate:
                  type: string
                  description: ''
                  example: expedita
                  nullable: false
              required:
                - appliance_type_id
                - overdue_remind_rate
                - remind_rate
      security: []
  '/api/sms-appliance-remind-rate/{smsApplianceRemindRate_id}':
    put:
      summary: ''
      operationId: putApiSmsApplianceRemindRateSmsApplianceRemindRate_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: smsApplianceRemindRate_id
        description: 'The ID of the smsApplianceRemindRate.'
        example: 5
        required: true
        schema:
          type: integer
  /api/sms-android-setting:
    get:
      summary: ''
      operationId: getApiSmsAndroidSetting
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiSmsAndroidSetting
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: voluptas
                  nullable: false
              required:
                - token
      security: []
  '/api/sms-android-setting/{smsAndroidSetting_id}':
    put:
      summary: ''
      operationId: putApiSmsAndroidSettingSmsAndroidSetting_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: officiis
                  nullable: false
              required:
                - token
      security: []
    delete:
      summary: ''
      operationId: deleteApiSmsAndroidSettingSmsAndroidSetting_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: smsAndroidSetting_id
        description: 'The ID of the smsAndroidSetting.'
        example: 8
        required: true
        schema:
          type: integer
  /api/sms-variable-default-value:
    get:
      summary: ''
      operationId: getApiSmsVariableDefaultValue
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/reports:
    get:
      summary: ''
      operationId: getApiReports
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/report-downloading/{id}/download/{slug}':
    get:
      summary: ''
      operationId: getApiReportDownloadingIdDownloadSlug
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\CompanyDatabase].'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\CompanyDatabase].'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the report downloading.'
        example: quam
        required: true
        schema:
          type: string
      -
        in: path
        name: slug
        description: 'The slug of the download.'
        example: est
        required: true
        schema:
          type: string
  /api/revenue:
    post:
      summary: 'Prepares the data for revenue dashboard.'
      operationId: preparesTheDataForRevenueDashboard
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/revenue/trends/{id}':
    post:
      summary: ''
      operationId: postApiRevenueTrendsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the trend.'
        example: necessitatibus
        required: true
        schema:
          type: string
  '/api/revenue/tickets/{id}':
    get:
      summary: ''
      operationId: getApiRevenueTicketsId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the ticket.'
        example: quaerat
        required: true
        schema:
          type: string
  '/api/sms/{number}':
    get:
      summary: ''
      operationId: getApiSmsNumber
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: number
        description: ''
        example: 9
        required: true
        schema:
          type: integer
  '/api/sms/phone/{number}':
    get:
      summary: ''
      operationId: getApiSmsPhoneNumber
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: number
        description: ''
        example: aliquam
        required: true
        schema:
          type: string
  /api/sms:
    get:
      summary: ''
      operationId: getApiSms
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiSms
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sender:
                  type: string
                  description: ''
                  example: aut
                  nullable: false
                message:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: false
              required:
                - sender
                - message
      security: []
  '/api/sms/search/{search}':
    get:
      summary: ''
      operationId: getApiSmsSearchSearch
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: search
        description: 'The search.'
        example: nam
        required: true
        schema:
          type: string
  /api/sms/storeandsend:
    post:
      summary: ''
      operationId: postApiSmsStoreandsend
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: ''
                  example: ipsum
                  nullable: false
                person_id:
                  type: string
                  description: 'This field is required when none of <code>phone</code> are present.'
                  example: null
                  nullable: false
              required:
                - message
      security: []
  /api/sms/bulk:
    post:
      summary: ''
      operationId: postApiSmsBulk
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/sms-android-callback/{uuid}/delivered/{slug}':
    get:
      summary: 'Marks the sms as sent.'
      operationId: marksTheSmsAsSent
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\CompanyDatabase].'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\CompanyDatabase].'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: uuid
        description: ''
        example: ba2a9ec6-254f-3000-99ba-8005b20a2eb2
        required: true
        schema:
          type: string
      -
        in: path
        name: slug
        description: 'The slug of the delivered.'
        example: earum
        required: true
        schema:
          type: string
  '/api/sms-android-callback/{uuid}/sent/{slug}':
    get:
      summary: ''
      operationId: getApiSmsAndroidCallbackUuidSentSlug
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\CompanyDatabase].'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\CompanyDatabase].'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: uuid
        description: ''
        example: d7714246-2708-3c09-b2cf-044b80a0255a
        required: true
        schema:
          type: string
      -
        in: path
        name: slug
        description: 'The slug of the sent.'
        example: fuga
        required: true
        schema:
          type: string
  '/api/sub-connection-types/{connectionTypeId}':
    get:
      summary: ''
      operationId: getApiSubConnectionTypesConnectionTypeId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: connectionTypeId
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: velit
  /api/sub-connection-types:
    post:
      summary: 'Show the form for creating a new resource.'
      operationId: showTheFormForCreatingANewResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: validation.min.
                  example: jurgvsdyoprjuuasfcksueowpphrflpgauoowosdeijjg
                  nullable: false
                connection_type_id:
                  type: number
                  description: ''
                  example: 530115548.59
                  nullable: false
                tariff_id:
                  type: number
                  description: ''
                  example: 6412751.15
                  nullable: false
              required:
                - name
                - connection_type_id
                - tariff_id
      security: []
  '/api/sub-connection-types/{subConnectionTypeId}':
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: subConnectionTypeId
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  /api/targets:
    get:
      summary: ''
      operationId: getApiTargets
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiTargets
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: fuga
                  nullable: false
                period:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: false
                targetForType:
                  type: string
                  description: ''
                  example: voluptatum
                  nullable: false
                targetForId:
                  type: number
                  description: validation.min.
                  example: 8
                  nullable: false
              required:
                - data
                - period
                - targetForType
                - targetForId
      security: []
  '/api/targets/{targetId}':
    get:
      summary: ''
      operationId: getApiTargetsTargetId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: targetId
        description: ''
        example: 16
        required: true
        schema:
          type: integer
  /api/targets/slots:
    post:
      summary: ''
      operationId: postApiTargetsSlots
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/tariffs:
    get:
      summary: "List\na list of all tariffs."
      operationId: listaListOfAllTariffs
      description: 'The list is paginated and each page contains 15 results.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data:
                    -
                      id: 1
                      name: 'Productive Usage'
                      price: 350
                      currency: EUR
                      factor: 1
                      created_at: '2018-07-27 15:32:42'
                      updated_at: '2018-07-27 15:32:42'
                      deleted_at: null
                      access_rate:
                        id: 1
                        tariff_id: 1
                        amount: 10000
                        period: 7
                        created_at: '2018-07-27 15:32:42'
                        updated_at: '2018-07-27 15:32:42'
                    -
                      id: 2
                      name: 'House Hold'
                      price: 450
                      currency: EUR
                      factor: 1
                      created_at: '2018-07-27 15:32:59'
                      updated_at: '2018-07-27 15:32:59'
                      deleted_at: null
                      access_rate:
                        id: 2
                        tariff_id: 2
                        amount: 0
                        period: 7
                        created_at: '2018-07-27 15:32:59'
                        updated_at: '2018-07-27 15:32:59'
                    -
                      id: 3
                      name: 'Comercial Usage'
                      price: 550
                      currency: EUR
                      factor: 1
                      created_at: '2018-07-27 15:33:09'
                      updated_at: '2018-07-27 15:33:09'
                      deleted_at: null
                      access_rate:
                        id: 3
                        tariff_id: 3
                        amount: 0
                        period: 7
                        created_at: '2018-07-27 15:33:09'
                        updated_at: '2018-07-27 15:33:09'
                  first_page_url: 'http://localhost:8000/api/tariffs?page=1'
                  from: 1
                  last_page: 1
                  last_page_url: 'http://localhost:8000/api/tariffs?page=1'
                  next_page_url: null
                  path: 'http://localhost:8000/api/tariffs'
                  per_page: 15
                  prev_page_url: null
                  to: 4
                  total: 4
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Productive Usage'
                        price: 350
                        currency: EUR
                        factor: 1
                        created_at: '2018-07-27 15:32:42'
                        updated_at: '2018-07-27 15:32:42'
                        deleted_at: null
                        access_rate:
                          id: 1
                          tariff_id: 1
                          amount: 10000
                          period: 7
                          created_at: '2018-07-27 15:32:42'
                          updated_at: '2018-07-27 15:32:42'
                      -
                        id: 2
                        name: 'House Hold'
                        price: 450
                        currency: EUR
                        factor: 1
                        created_at: '2018-07-27 15:32:59'
                        updated_at: '2018-07-27 15:32:59'
                        deleted_at: null
                        access_rate:
                          id: 2
                          tariff_id: 2
                          amount: 0
                          period: 7
                          created_at: '2018-07-27 15:32:59'
                          updated_at: '2018-07-27 15:32:59'
                      -
                        id: 3
                        name: 'Comercial Usage'
                        price: 550
                        currency: EUR
                        factor: 1
                        created_at: '2018-07-27 15:33:09'
                        updated_at: '2018-07-27 15:33:09'
                        deleted_at: null
                        access_rate:
                          id: 3
                          tariff_id: 3
                          amount: 0
                          period: 7
                          created_at: '2018-07-27 15:33:09'
                          updated_at: '2018-07-27 15:33:09'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Productive Usage'
                        price:
                          type: integer
                          example: 350
                        currency:
                          type: string
                          example: EUR
                        factor:
                          type: integer
                          example: 1
                        created_at:
                          type: string
                          example: '2018-07-27 15:32:42'
                        updated_at:
                          type: string
                          example: '2018-07-27 15:32:42'
                        deleted_at:
                          type: string
                          example: null
                        access_rate:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            tariff_id:
                              type: integer
                              example: 1
                            amount:
                              type: integer
                              example: 10000
                            period:
                              type: integer
                              example: 7
                            created_at:
                              type: string
                              example: '2018-07-27 15:32:42'
                            updated_at:
                              type: string
                              example: '2018-07-27 15:32:42'
                  first_page_url:
                    type: string
                    example: 'http://localhost:8000/api/tariffs?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'http://localhost:8000/api/tariffs?page=1'
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'http://localhost:8000/api/tariffs'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 4
                  total:
                    type: integer
                    example: 4
      tags:
        - Endpoints
      security: []
    post:
      summary: Create.
      operationId: create
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: a
                  nullable: false
                price:
                  type: integer
                  description: required.
                  example: 19
                  nullable: false
                currency:
                  type: string
                  description: ''
                  example: voluptates
                  nullable: false
                factor:
                  type: int.
                  description: 'The factor between two different sub tariffs. Like day/night sub-tariffs.'
                  example: inventore
                  nullable: false
                access_rate_period:
                  type: integer
                  description: validation.min.
                  example: 7
                  nullable: false
                access_rate_amount:
                  type: integer
                  description: ''
                  example: 11
                  nullable: false
                social_tariff:
                  type: string
                  description: ''
                  example: omnis
                  nullable: false
                components:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
                tous:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
                minimum_purchase_amount:
                  type: number
                  description: ''
                  example: 12358505.0
                  nullable: false
              required:
                - name
                - social_tariff
                - components
                - tous
      security: []
  '/api/tariffs/{meterTariffId}':
    get:
      summary: Detail.
      operationId: detail
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'Productive Usage'
                    price: 350
                    currency: EUR
                    factor: 1
                    created_at: '2018-07-27 15:32:42'
                    updated_at: '2018-07-27 15:32:42'
                    deleted_at: null
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Productive Usage'
                      price:
                        type: integer
                        example: 350
                      currency:
                        type: string
                        example: EUR
                      factor:
                        type: integer
                        example: 1
                      created_at:
                        type: string
                        example: '2018-07-27 15:32:42'
                      updated_at:
                        type: string
                        example: '2018-07-27 15:32:42'
                      deleted_at:
                        type: string
                        example: null
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiTariffsMeterTariffId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: eveniet
                  nullable: false
                price:
                  type: number
                  description: ''
                  example: 1.0
                  nullable: false
                currency:
                  type: string
                  description: validation.max.
                  example: rxwfta
                  nullable: false
                factor:
                  type: integer
                  description: ''
                  example: 20
                  nullable: false
                access_rate_period:
                  type: integer
                  description: validation.min.
                  example: 8
                  nullable: false
                access_rate_amount:
                  type: integer
                  description: ''
                  example: 1
                  nullable: false
                social_tariff:
                  type: string
                  description: ''
                  example: sit
                  nullable: false
                components:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
                tous:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
                minimum_purchase_amount:
                  type: number
                  description: ''
                  example: 28061265.09
                  nullable: false
              required:
                - name
                - price
                - currency
                - social_tariff
                - components
                - tous
      security: []
    delete:
      summary: ''
      operationId: deleteApiTariffsMeterTariffId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: meterTariffId
        description: ''
        example: iure
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: ''
        example: 8
        required: true
        schema:
          type: integer
  '/api/tariffs/{meterTariffId}/usage-count':
    get:
      summary: 'Display a list of meters which using a particular tariff.'
      operationId: displayAListOfMetersWhichUsingAParticularTariff
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: meterTariffId
        description: ''
        example: nostrum
        required: true
        schema:
          type: string
  '/api/tariffs/{meterTariffId}/change-meters-tariff/{changeId}':
    put:
      summary: ''
      operationId: putApiTariffsMeterTariffIdChangeMetersTariffChangeId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: meterTariffId
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: changeId
        description: ''
        example: sit
        required: true
        schema:
          type: string
  '/api/tariffs/{meterSerial}/change-meter-tariff/{tariffId}':
    put:
      summary: ''
      operationId: putApiTariffsMeterSerialChangeMeterTariffTariffId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: meterSerial
        description: ''
        example: veniam
        required: true
        schema:
          type: string
      -
        in: path
        name: tariffId
        description: ''
        example: sunt
        required: true
        schema:
          type: string
  /api/transactions/airtel:
    post:
      summary: ''
      operationId: postApiTransactionsAirtel
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/transactions/vodacom:
    post:
      summary: ''
      operationId: postApiTransactionsVodacom
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/transactions/agent:
    post:
      summary: ''
      operationId: postApiTransactionsAgent
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/time-of-usages/{timeOfUsageId}':
    delete:
      summary: ''
      operationId: deleteApiTimeOfUsagesTimeOfUsageId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: timeOfUsageId
        description: ''
        example: 14
        required: true
        schema:
          type: integer
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/mpm-plugins:
    get:
      summary: ''
      operationId: getApiMpmPlugins
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      usage_type: mini-grid
                      name: SparkMeter
                      description: 'This plugin uses KoiosAPI for the main authentication. After it got authenticated it uses the ThunderCloud API for basic CRUD operations. You need to enter the ThunderCloud Token on the site'
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                      tail_tag: 'Spark Meter'
                      installation_command: 'spark-meter:install'
                      root_class: SparkMeter
                    -
                      id: 2
                      usage_type: mini-grid
                      name: SteamaMeter
                      description: 'This plugin integrates Steamaco meters to Micropowermanager. It uses the same  credentials as ui.steama.co for authentication. After it got authenticated, the plugin synchronizes Site, Customer ..'
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                      tail_tag: 'Steamaco Meter'
                      installation_command: 'steama-meter:install'
                      root_class: SteamaMeter
                    -
                      id: 3
                      usage_type: mini-grid
                      name: CalinMeter
                      description: 'This plugin integrates Calin meters to Micropowermanager. It uses user_id & api_key for creating tokens for energy.'
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                      tail_tag: 'Calin Meter'
                      installation_command: 'calin-meter:install'
                      root_class: CalinMeter
                    -
                      id: 4
                      usage_type: mini-grid
                      name: CalinSmartMeter
                      description: 'This plugin integrates Calin meters to Micropowermanager. It uses company_name, user_name, password and password_vend for creating tokens for energy.'
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                      tail_tag: 'CalinSmart Meter'
                      installation_command: 'calin-smart-meter:install'
                      root_class: CalinSmartMeter
                    -
                      id: 5
                      usage_type: mini-grid
                      name: KelinMeter
                      description: 'This plugin integrates Kelim meters to Micropowermanager. It uses username & password for creating tokens for energy.'
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                      tail_tag: 'Kelin Meter'
                      installation_command: 'kelin-meter:install'
                      root_class: KelinMeter
                    -
                      id: 6
                      usage_type: mini-grid
                      name: StronMeter
                      description: 'This plugin integrates Stron meters to Micropowermanager. It uses the api login credentials for authentication.'
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                      tail_tag: 'Stron Meter'
                      installation_command: 'stron-meter:installl'
                      root_class: StronMeter
                    -
                      id: 7
                      usage_type: general
                      name: SwiftaPayment
                      description: 'This plugin developed for getting Swifta payments into MicroPowerManager.'
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                      tail_tag: null
                      installation_command: 'swifta-payment-provider:install'
                      root_class: SwiftaPaymentProvider
                    -
                      id: 8
                      usage_type: general
                      name: MesombPayment
                      description: 'This plugin developed for getting MeSomb payments into MicroPowerManager.'
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                      tail_tag: null
                      installation_command: 'mesomb-payment-provider:install'
                      root_class: MesombPaymentProvider
                    -
                      id: 9
                      usage_type: general
                      name: BulkRegistration
                      description: "This plugin provides bulk registration of the company's existing records. NOTE: Please do not use this plugin to register your Spark & Stemaco meter records. These records will be synchronized automatically once you configure your credential settings for these plugins."
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                      tail_tag: null
                      installation_command: 'bulk-registration:install'
                      root_class: BulkRegistration
                    -
                      id: 10
                      usage_type: general
                      name: ViberMessaging
                      description: 'This plugin developed for the communication with customers throughout Viber messages.'
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                      tail_tag: 'Viber Messaging'
                      installation_command: 'viber-messaging:install'
                      root_class: ViberMessaging
                    -
                      id: 11
                      usage_type: general
                      name: WaveMoneyPayment
                      description: 'This plugin developed for getting WaveMoney payments into MicroPowerManager.'
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                      tail_tag: WaveMoney
                      installation_command: 'wave-money-payment-provider:install'
                      root_class: WaveMoneyPaymentProvider
                    -
                      id: 12
                      usage_type: mini-grid
                      name: MicroStarMeter
                      description: 'This plugin integrates MicroStar meters to Micropowermanager. It uses user_id & api_key for creating tokens for energy.'
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                      tail_tag: 'MicroStar Meter'
                      installation_command: 'micro-star-meter:install'
                      root_class: MicroStarMeter
                    -
                      id: 13
                      usage_type: shs
                      name: SunKingSHS
                      description: 'This plugin integrates SunKing solar home systems to Micropowermanager. It uses client_id & client_secret for creating tokens for energy.'
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                      tail_tag: 'SunKing SHS'
                      installation_command: 'sun-king-shs:install'
                      root_class: SunKingSHS
                    -
                      id: 14
                      usage_type: mini-grid
                      name: GomeLongMeter
                      description: 'This plugin integrates GomeLong meters to Micropowermanager. It uses. user_id & user_password for creating tokens for energy.'
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                      tail_tag: 'GomeLong Meter'
                      installation_command: 'gome-long-meter:install'
                      root_class: GomeLongMeter
                    -
                      id: 15
                      usage_type: general
                      name: WavecomPayment
                      description: 'This plugin developed for getting Wavecom(Senegal) payments into MicroPowerManager.'
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                      tail_tag: null
                      installation_command: 'wavecom-payment-provider:install'
                      root_class: WavecomPaymentProvider
                    -
                      id: 16
                      usage_type: e-bike
                      name: DalyBms
                      description: 'This plugin developed for managing e-bikes with daly bms.'
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                      tail_tag: 'Daly Bms'
                      installation_command: 'daly-bms:install'
                      root_class: DalyBms
                    -
                      id: 17
                      usage_type: shs
                      name: AngazaSHS
                      description: 'This plugin integrates Angaza solar home systems to Micropowermanager. It uses client_id & client_secret for creating tokens for energy.'
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                      tail_tag: 'Angaza SHS'
                      installation_command: 'angaza-shs:install'
                      root_class: AngazaSHS
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        usage_type: mini-grid
                        name: SparkMeter
                        description: 'This plugin uses KoiosAPI for the main authentication. After it got authenticated it uses the ThunderCloud API for basic CRUD operations. You need to enter the ThunderCloud Token on the site'
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                        tail_tag: 'Spark Meter'
                        installation_command: 'spark-meter:install'
                        root_class: SparkMeter
                      -
                        id: 2
                        usage_type: mini-grid
                        name: SteamaMeter
                        description: 'This plugin integrates Steamaco meters to Micropowermanager. It uses the same  credentials as ui.steama.co for authentication. After it got authenticated, the plugin synchronizes Site, Customer ..'
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                        tail_tag: 'Steamaco Meter'
                        installation_command: 'steama-meter:install'
                        root_class: SteamaMeter
                      -
                        id: 3
                        usage_type: mini-grid
                        name: CalinMeter
                        description: 'This plugin integrates Calin meters to Micropowermanager. It uses user_id & api_key for creating tokens for energy.'
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                        tail_tag: 'Calin Meter'
                        installation_command: 'calin-meter:install'
                        root_class: CalinMeter
                      -
                        id: 4
                        usage_type: mini-grid
                        name: CalinSmartMeter
                        description: 'This plugin integrates Calin meters to Micropowermanager. It uses company_name, user_name, password and password_vend for creating tokens for energy.'
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                        tail_tag: 'CalinSmart Meter'
                        installation_command: 'calin-smart-meter:install'
                        root_class: CalinSmartMeter
                      -
                        id: 5
                        usage_type: mini-grid
                        name: KelinMeter
                        description: 'This plugin integrates Kelim meters to Micropowermanager. It uses username & password for creating tokens for energy.'
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                        tail_tag: 'Kelin Meter'
                        installation_command: 'kelin-meter:install'
                        root_class: KelinMeter
                      -
                        id: 6
                        usage_type: mini-grid
                        name: StronMeter
                        description: 'This plugin integrates Stron meters to Micropowermanager. It uses the api login credentials for authentication.'
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                        tail_tag: 'Stron Meter'
                        installation_command: 'stron-meter:installl'
                        root_class: StronMeter
                      -
                        id: 7
                        usage_type: general
                        name: SwiftaPayment
                        description: 'This plugin developed for getting Swifta payments into MicroPowerManager.'
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                        tail_tag: null
                        installation_command: 'swifta-payment-provider:install'
                        root_class: SwiftaPaymentProvider
                      -
                        id: 8
                        usage_type: general
                        name: MesombPayment
                        description: 'This plugin developed for getting MeSomb payments into MicroPowerManager.'
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                        tail_tag: null
                        installation_command: 'mesomb-payment-provider:install'
                        root_class: MesombPaymentProvider
                      -
                        id: 9
                        usage_type: general
                        name: BulkRegistration
                        description: "This plugin provides bulk registration of the company's existing records. NOTE: Please do not use this plugin to register your Spark & Stemaco meter records. These records will be synchronized automatically once you configure your credential settings for these plugins."
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                        tail_tag: null
                        installation_command: 'bulk-registration:install'
                        root_class: BulkRegistration
                      -
                        id: 10
                        usage_type: general
                        name: ViberMessaging
                        description: 'This plugin developed for the communication with customers throughout Viber messages.'
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                        tail_tag: 'Viber Messaging'
                        installation_command: 'viber-messaging:install'
                        root_class: ViberMessaging
                      -
                        id: 11
                        usage_type: general
                        name: WaveMoneyPayment
                        description: 'This plugin developed for getting WaveMoney payments into MicroPowerManager.'
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                        tail_tag: WaveMoney
                        installation_command: 'wave-money-payment-provider:install'
                        root_class: WaveMoneyPaymentProvider
                      -
                        id: 12
                        usage_type: mini-grid
                        name: MicroStarMeter
                        description: 'This plugin integrates MicroStar meters to Micropowermanager. It uses user_id & api_key for creating tokens for energy.'
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                        tail_tag: 'MicroStar Meter'
                        installation_command: 'micro-star-meter:install'
                        root_class: MicroStarMeter
                      -
                        id: 13
                        usage_type: shs
                        name: SunKingSHS
                        description: 'This plugin integrates SunKing solar home systems to Micropowermanager. It uses client_id & client_secret for creating tokens for energy.'
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                        tail_tag: 'SunKing SHS'
                        installation_command: 'sun-king-shs:install'
                        root_class: SunKingSHS
                      -
                        id: 14
                        usage_type: mini-grid
                        name: GomeLongMeter
                        description: 'This plugin integrates GomeLong meters to Micropowermanager. It uses. user_id & user_password for creating tokens for energy.'
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                        tail_tag: 'GomeLong Meter'
                        installation_command: 'gome-long-meter:install'
                        root_class: GomeLongMeter
                      -
                        id: 15
                        usage_type: general
                        name: WavecomPayment
                        description: 'This plugin developed for getting Wavecom(Senegal) payments into MicroPowerManager.'
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                        tail_tag: null
                        installation_command: 'wavecom-payment-provider:install'
                        root_class: WavecomPaymentProvider
                      -
                        id: 16
                        usage_type: e-bike
                        name: DalyBms
                        description: 'This plugin developed for managing e-bikes with daly bms.'
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                        tail_tag: 'Daly Bms'
                        installation_command: 'daly-bms:install'
                        root_class: DalyBms
                      -
                        id: 17
                        usage_type: shs
                        name: AngazaSHS
                        description: 'This plugin integrates Angaza solar home systems to Micropowermanager. It uses client_id & client_secret for creating tokens for energy.'
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                        tail_tag: 'Angaza SHS'
                        installation_command: 'angaza-shs:install'
                        root_class: AngazaSHS
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        usage_type:
                          type: string
                          example: mini-grid
                        name:
                          type: string
                          example: SparkMeter
                        description:
                          type: string
                          example: 'This plugin uses KoiosAPI for the main authentication. After it got authenticated it uses the ThunderCloud API for basic CRUD operations. You need to enter the ThunderCloud Token on the site'
                        created_at:
                          type: string
                          example: '2024-11-20T16:05:47.000000Z'
                        updated_at:
                          type: string
                          example: '2024-11-20T16:05:47.000000Z'
                        tail_tag:
                          type: string
                          example: 'Spark Meter'
                        installation_command:
                          type: string
                          example: 'spark-meter:install'
                        root_class:
                          type: string
                          example: SparkMeter
      tags:
        - Endpoints
      security: []
  /api/registration-tails:
    get:
      summary: ''
      operationId: getApiRegistrationTails
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/registration-tails/{registrationTail_id}':
    put:
      summary: ''
      operationId: putApiRegistrationTailsRegistrationTail_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: registrationTail_id
        description: 'The ID of the registrationTail.'
        example: 1
        required: true
        schema:
          type: integer
  /api/plugins:
    get:
      summary: ''
      operationId: getApiPlugins
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/plugins/{mpmPluginId}':
    put:
      summary: ''
      operationId: putApiPluginsMpmPluginId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: mpmPluginId
        description: ''
        example: asperiores
        required: true
        schema:
          type: string
  /api/clusterlist:
    get:
      summary: ''
      operationId: getApiClusterlist
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/restrictions:
    post:
      summary: ''
      operationId: postApiRestrictions
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/protected-pages:
    get:
      summary: ''
      operationId: getApiProtectedPages
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: /locations/add-cluster
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 2
                      name: /locations/add-mini-grid
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 3
                      name: /locations/add-village
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 4
                      name: /settings
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 5
                      name: /connection-groups
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 6
                      name: /connection-types
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 7
                      name: /profile/management
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 8
                      name: /commissions
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 9
                      name: /tariffs
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 10
                      name: /targets
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 11
                      name: /swifta-payment/swifta-payment-overview
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 12
                      name: /bulk-registration/bulk-registration
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 13
                      name: /wave-money/wave-money-overview
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 14
                      name: /sun-king-meters/sun-king-overview
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 15
                      name: /kelin-meters/kelin-overview
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 16
                      name: /kelin-meters/kelin-setting
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 17
                      name: /spark-meters/sm-overview
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 18
                      name: /spark-meters/sm-site
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 19
                      name: /spark-meters/sm-tariff
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 20
                      name: /spark-meters/sm-sales-account
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 21
                      name: /spark-meters/sm-setting
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 22
                      name: /steama-meters/steama-overview
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 23
                      name: /steama-meters/steama-site
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 24
                      name: /steama-meters/steama-setting
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 25
                      name: /stron-meters/stron-overview
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 26
                      name: /viber-messaging/viber-overview
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 27
                      name: /calin-meters/calin-overview
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 28
                      name: /calin-smart-meters/calin-smart-overview
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 29
                      name: /micro-star-meters/micro-star-overview
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 30
                      name: /gome-long-meters/gome-long-overview
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: /locations/add-cluster
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 2
                        name: /locations/add-mini-grid
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 3
                        name: /locations/add-village
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 4
                        name: /settings
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 5
                        name: /connection-groups
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 6
                        name: /connection-types
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 7
                        name: /profile/management
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 8
                        name: /commissions
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 9
                        name: /tariffs
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 10
                        name: /targets
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 11
                        name: /swifta-payment/swifta-payment-overview
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 12
                        name: /bulk-registration/bulk-registration
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 13
                        name: /wave-money/wave-money-overview
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 14
                        name: /sun-king-meters/sun-king-overview
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 15
                        name: /kelin-meters/kelin-overview
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 16
                        name: /kelin-meters/kelin-setting
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 17
                        name: /spark-meters/sm-overview
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 18
                        name: /spark-meters/sm-site
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 19
                        name: /spark-meters/sm-tariff
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 20
                        name: /spark-meters/sm-sales-account
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 21
                        name: /spark-meters/sm-setting
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 22
                        name: /steama-meters/steama-overview
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 23
                        name: /steama-meters/steama-site
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 24
                        name: /steama-meters/steama-setting
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 25
                        name: /stron-meters/stron-overview
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 26
                        name: /viber-messaging/viber-overview
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 27
                        name: /calin-meters/calin-overview
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 28
                        name: /calin-smart-meters/calin-smart-overview
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 29
                        name: /micro-star-meters/micro-star-overview
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 30
                        name: /gome-long-meters/gome-long-overview
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: /locations/add-cluster
                        created_at:
                          type: string
                          example: '2024-11-20T16:05:47.000000Z'
                        updated_at:
                          type: string
                          example: '2024-11-20T16:05:47.000000Z'
      tags:
        - Endpoints
      security: []
  /api/companies:
    post:
      summary: ''
      operationId: postApiCompanies
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: ducimus
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: optio
                  nullable: false
                phone:
                  type: string
                  description: ''
                  example: eligendi
                  nullable: false
                email:
                  type: string
                  description: ''
                  example: accusamus
                  nullable: false
                protected_page_password:
                  type: string
                  description: ''
                  example: nobis
                  nullable: false
              required:
                - name
                - address
                - phone
                - email
                - protected_page_password
      security: []
  '/api/companies/{email}':
    get:
      summary: ''
      operationId: getApiCompaniesEmail
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: email
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  '/api/devices/{device_id}':
    put:
      summary: ''
      operationId: putApiDevicesDevice_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 23713.942
                  nullable: false
                person_id:
                  type: number
                  description: ''
                  example: 288.0
                  nullable: false
                device_type:
                  type: string
                  description: ''
                  example: pariatur
                  nullable: false
                device_serial:
                  type: string
                  description: ''
                  example: et
                  nullable: false
                device_id:
                  type: number
                  description: ''
                  example: 31.881791
                  nullable: false
              required:
                - id
                - person_id
                - device_type
                - device_serial
                - device_id
      security: []
    parameters:
      -
        in: path
        name: device_id
        description: 'The ID of the device.'
        example: 1
        required: true
        schema:
          type: integer
  /api/devices:
    get:
      summary: ''
      operationId: getApiDevices
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/device-addresses:
    post:
      summary: ''
      operationId: postApiDeviceAddresses
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/airtel-volt-terra/{meterSerial}/{amount}':
    get:
      summary: ''
      operationId: getApiAirtelVoltTerraMeterSerialAmount
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\CompanyDatabase].'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\CompanyDatabase].'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: meterSerial
        description: ''
        example: harum
        required: true
        schema:
          type: string
      -
        in: path
        name: amount
        description: ''
        example: sunt
        required: true
        schema:
          type: string
  /api/solar-home-systems:
    get:
      summary: ''
      operationId: getApiSolarHomeSystems
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiSolarHomeSystems
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                serial_number:
                  type: string
                  description: 'validation.min validation.max.'
                  example: nyavprbe
                  nullable: false
                manufacturer_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the shard.manufacturers table.'
                  example: delectus
                  nullable: false
                asset_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the shard.assets table.'
                  example: iusto
                  nullable: false
              required:
                - serial_number
                - manufacturer_id
                - asset_id
      security: []
  /api/solar-home-systems/search:
    get:
      summary: ''
      operationId: getApiSolarHomeSystemsSearch
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/e-bikes:
    get:
      summary: ''
      operationId: getApiEBikes
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiEBikes
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                serial_number:
                  type: string
                  description: 'validation.min validation.max.'
                  example: pqwonerrc
                  nullable: false
                manufacturer_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the shard.manufacturers table.'
                  example: libero
                  nullable: false
                asset_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the shard.assets table.'
                  example: consequatur
                  nullable: false
              required:
                - serial_number
                - manufacturer_id
                - asset_id
      security: []
  /api/e-bikes/search:
    get:
      summary: ''
      operationId: getApiEBikesSearch
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/e-bikes/{serialNumber}':
    get:
      summary: ''
      operationId: getApiEBikesSerialNumber
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: serialNumber
        description: ''
        example: 13
        required: true
        schema:
          type: integer
  /api/e-bikes/switch:
    post:
      summary: ''
      operationId: postApiEBikesSwitch
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/export/transactions/{slug}':
    get:
      summary: ''
      operationId: getApiExportTransactionsSlug
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\DatabaseProxy].'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\DatabaseProxy].'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: slug
        description: 'The slug of the transaction.'
        example: quo
        required: true
        schema:
          type: string
  '/api/export/debts/{slug}':
    get:
      summary: ''
      operationId: getApiExportDebtsSlug
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\DatabaseProxy].'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\DatabaseProxy].'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: slug
        description: 'The slug of the debt.'
        example: quae
        required: true
        schema:
          type: string
  /api/usage-types:
    get:
      summary: ''
      operationId: getApiUsageTypes
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: Mini-Grid
                      value: mini-grid
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 2
                      name: 'Solar Home System'
                      value: shs
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 3
                      name: 'EBike Rental'
                      value: e-bike
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 4
                      name: 'Mini-Grid & Solar Home System'
                      value: 'mini-grid&shs'
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 5
                      name: 'Mini-Grid & EBike Rental'
                      value: 'mini-grid&e-bike'
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 6
                      name: 'Solar Home & EBike Rental'
                      value: 'shs&e-bike'
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                    -
                      id: 7
                      name: 'Mini-Grid & Solar Home System & EBike Rental'
                      value: 'mini-grid&shs&e-bike'
                      created_at: '2024-11-20T16:05:47.000000Z'
                      updated_at: '2024-11-20T16:05:47.000000Z'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: Mini-Grid
                        value: mini-grid
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 2
                        name: 'Solar Home System'
                        value: shs
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 3
                        name: 'EBike Rental'
                        value: e-bike
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 4
                        name: 'Mini-Grid & Solar Home System'
                        value: 'mini-grid&shs'
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 5
                        name: 'Mini-Grid & EBike Rental'
                        value: 'mini-grid&e-bike'
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 6
                        name: 'Solar Home & EBike Rental'
                        value: 'shs&e-bike'
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                      -
                        id: 7
                        name: 'Mini-Grid & Solar Home System & EBike Rental'
                        value: 'mini-grid&shs&e-bike'
                        created_at: '2024-11-20T16:05:47.000000Z'
                        updated_at: '2024-11-20T16:05:47.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Mini-Grid
                        value:
                          type: string
                          example: mini-grid
                        created_at:
                          type: string
                          example: '2024-11-20T16:05:47.000000Z'
                        updated_at:
                          type: string
                          example: '2024-11-20T16:05:47.000000Z'
      tags:
        - Endpoints
      security: []
  /api/spark-meters/sm-site:
    get:
      summary: ''
      operationId: getApiSparkMetersSmSite
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/spark-meters/sm-site/sync:
    get:
      summary: ''
      operationId: getApiSparkMetersSmSiteSync
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/spark-meters/sm-site/sync-check:
    get:
      summary: ''
      operationId: getApiSparkMetersSmSiteSyncCheck
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/spark-meters/sm-site/count:
    get:
      summary: ''
      operationId: getApiSparkMetersSmSiteCount
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/spark-meters/sm-site/{site_id}':
    put:
      summary: ''
      operationId: putApiSparkMetersSmSiteSite_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thundercloud_url:
                  type: string
                  description: ''
                  example: sed
                  nullable: false
                thundercloud_token:
                  type: string
                  description: ''
                  example: impedit
                  nullable: false
              required:
                - thundercloud_url
                - thundercloud_token
      security: []
    parameters:
      -
        in: path
        name: site_id
        description: 'The ID of the site.'
        example: 3
        required: true
        schema:
          type: integer
  /api/spark-meters/sm-site/location:
    get:
      summary: ''
      operationId: getApiSparkMetersSmSiteLocation
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/spark-meters/sm-credential:
    get:
      summary: ''
      operationId: getApiSparkMetersSmCredential
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiSparkMetersSmCredential
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                api_key:
                  type: string
                  description: ''
                  example: sit
                  nullable: false
                api_secret:
                  type: string
                  description: ''
                  example: ratione
                  nullable: false
              required:
                - api_key
                - api_secret
      security: []
  /api/spark-meters/sm-meter-model:
    get:
      summary: ''
      operationId: getApiSparkMetersSmMeterModel
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/spark-meters/sm-meter-model/sync:
    get:
      summary: ''
      operationId: getApiSparkMetersSmMeterModelSync
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/spark-meters/sm-meter-model/sync-check:
    get:
      summary: ''
      operationId: getApiSparkMetersSmMeterModelSyncCheck
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/spark-meters/sm-meter-model/count:
    get:
      summary: ''
      operationId: getApiSparkMetersSmMeterModelCount
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/spark-meters/sm-customer:
    get:
      summary: ''
      operationId: getApiSparkMetersSmCustomer
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/spark-meters/sm-customer/sync:
    get:
      summary: ''
      operationId: getApiSparkMetersSmCustomerSync
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/spark-meters/sm-customer/sync-check:
    get:
      summary: ''
      operationId: getApiSparkMetersSmCustomerSyncCheck
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/spark-meters/sm-customer/count:
    get:
      summary: ''
      operationId: getApiSparkMetersSmCustomerCount
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/spark-meters/sm-customer/connection:
    get:
      summary: ''
      operationId: getApiSparkMetersSmCustomerConnection
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/spark-meters/sm-customer/{customer_id}':
    put:
      summary: ''
      operationId: putApiSparkMetersSmCustomerCustomer_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                low_balance_limit:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: false
              required:
                - low_balance_limit
      security: []
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 13
        required: true
        schema:
          type: integer
  /api/spark-meters/sm-customer/search:
    get:
      summary: ''
      operationId: getApiSparkMetersSmCustomerSearch
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/spark-meters/sm-tariff:
    get:
      summary: ''
      operationId: getApiSparkMetersSmTariff
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/spark-meters/sm-tariff/information/{tariffId}':
    get:
      summary: ''
      operationId: getApiSparkMetersSmTariffInformationTariffId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: tariffId
        description: ''
        example: et
        required: true
        schema:
          type: string
  /api/spark-meters/sm-tariff/sync:
    get:
      summary: ''
      operationId: getApiSparkMetersSmTariffSync
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/spark-meters/sm-tariff/sync-check:
    get:
      summary: ''
      operationId: getApiSparkMetersSmTariffSyncCheck
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/spark-meters/sm-tariff/count:
    get:
      summary: ''
      operationId: getApiSparkMetersSmTariffCount
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/spark-meters/sm-sales-account:
    get:
      summary: ''
      operationId: getApiSparkMetersSmSalesAccount
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/spark-meters/sm-sales-account/sync:
    get:
      summary: ''
      operationId: getApiSparkMetersSmSalesAccountSync
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/spark-meters/sm-sales-account/sync-check:
    get:
      summary: ''
      operationId: getApiSparkMetersSmSalesAccountSyncCheck
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/spark-meters/sm-sales-account/count:
    get:
      summary: ''
      operationId: getApiSparkMetersSmSalesAccountCount
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/spark-meters/sm-setting:
    get:
      summary: ''
      operationId: getApiSparkMetersSmSetting
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/spark-meters/sm-setting/sms-setting:
    put:
      summary: ''
      operationId: putApiSparkMetersSmSettingSmsSetting
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/spark-meters/sm-setting/sms-setting/sms-body:
    get:
      summary: ''
      operationId: getApiSparkMetersSmSettingSmsSettingSmsBody
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiSparkMetersSmSettingSmsSettingSmsBody
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/spark-meters/sm-setting/sms-setting/sms-variable-default-value:
    get:
      summary: ''
      operationId: getApiSparkMetersSmSettingSmsSettingSmsVariableDefaultValue
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/spark-meters/sm-setting/sync-setting:
    put:
      summary: ''
      operationId: putApiSparkMetersSmSettingSyncSetting
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/spark-meters/sm-setting/feedback-word:
    get:
      summary: ''
      operationId: getApiSparkMetersSmSettingFeedbackWord
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/spark-meters/sm-setting/feedback-word/{smsFeedbackWord_id}':
    put:
      summary: ''
      operationId: putApiSparkMetersSmSettingFeedbackWordSmsFeedbackWord_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: smsFeedbackWord_id
        description: 'The ID of the smsFeedbackWord.'
        example: 20
        required: true
        schema:
          type: integer
  /api/steama-meters/steama-credential:
    get:
      summary: ''
      operationId: getApiSteamaMetersSteamaCredential
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiSteamaMetersSteamaCredential
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: ''
                  example: et
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: labore
                  nullable: false
              required:
                - username
                - password
      security: []
  /api/steama-meters/steama-site:
    get:
      summary: ''
      operationId: getApiSteamaMetersSteamaSite
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/steama-meters/steama-site/sync:
    get:
      summary: ''
      operationId: getApiSteamaMetersSteamaSiteSync
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/steama-meters/steama-site/sync-check:
    get:
      summary: ''
      operationId: getApiSteamaMetersSteamaSiteSyncCheck
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/steama-meters/steama-site/count:
    get:
      summary: ''
      operationId: getApiSteamaMetersSteamaSiteCount
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/steama-meters/steama-site/location:
    get:
      summary: ''
      operationId: getApiSteamaMetersSteamaSiteLocation
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/steama-meters/steama-customer:
    get:
      summary: ''
      operationId: getApiSteamaMetersSteamaCustomer
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/steama-meters/steama-customer/sync:
    get:
      summary: ''
      operationId: getApiSteamaMetersSteamaCustomerSync
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/steama-meters/steama-customer/sync-check:
    get:
      summary: ''
      operationId: getApiSteamaMetersSteamaCustomerSyncCheck
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/steama-meters/steama-customer/count:
    get:
      summary: ''
      operationId: getApiSteamaMetersSteamaCustomerCount
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/steama-meters/steama-customer/{customer}':
    put:
      summary: ''
      operationId: putApiSteamaMetersSteamaCustomerCustomer
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: est
                  nullable: false
                low_balance_warning:
                  type: string
                  description: ''
                  example: incidunt
                  nullable: false
                energy_price:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: false
              required:
                - id
                - low_balance_warning
                - energy_price
      security: []
    parameters:
      -
        in: path
        name: customer
        description: ''
        example: quidem
        required: true
        schema:
          type: string
  '/api/steama-meters/steama-customer/{customerId}':
    get:
      summary: ''
      operationId: getApiSteamaMetersSteamaCustomerCustomerId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: customerId
        description: ''
        example: officia
        required: true
        schema:
          type: string
  /api/steama-meters/steama-customer/advanced/search:
    get:
      summary: ''
      operationId: getApiSteamaMetersSteamaCustomerAdvancedSearch
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/steama-meters/steama-meter:
    get:
      summary: ''
      operationId: getApiSteamaMetersSteamaMeter
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/steama-meters/steama-meter/sync:
    get:
      summary: ''
      operationId: getApiSteamaMetersSteamaMeterSync
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/steama-meters/steama-meter/sync-check:
    get:
      summary: ''
      operationId: getApiSteamaMetersSteamaMeterSyncCheck
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/steama-meters/steama-meter/count:
    get:
      summary: ''
      operationId: getApiSteamaMetersSteamaMeterCount
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/steama-meters/steama-agent:
    get:
      summary: ''
      operationId: getApiSteamaMetersSteamaAgent
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/steama-meters/steama-agent/sync:
    get:
      summary: ''
      operationId: getApiSteamaMetersSteamaAgentSync
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/steama-meters/steama-agent/sync-check:
    get:
      summary: ''
      operationId: getApiSteamaMetersSteamaAgentSyncCheck
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/steama-meters/steama-agent/count:
    get:
      summary: ''
      operationId: getApiSteamaMetersSteamaAgentCount
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/steama-meters/steama-transaction/{customer}':
    get:
      summary: ''
      operationId: getApiSteamaMetersSteamaTransactionCustomer
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: customer
        description: ''
        example: sunt
        required: true
        schema:
          type: string
  /api/steama-meters/steama-setting:
    get:
      summary: ''
      operationId: getApiSteamaMetersSteamaSetting
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/steama-meters/steama-setting/sms-setting:
    put:
      summary: ''
      operationId: putApiSteamaMetersSteamaSettingSmsSetting
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/steama-meters/steama-setting/sms-setting/sms-body:
    get:
      summary: ''
      operationId: getApiSteamaMetersSteamaSettingSmsSettingSmsBody
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiSteamaMetersSteamaSettingSmsSettingSmsBody
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/steama-meters/steama-setting/sms-setting/sms-variable-default-value:
    get:
      summary: ''
      operationId: getApiSteamaMetersSteamaSettingSmsSettingSmsVariableDefaultValue
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/steama-meters/steama-setting/sync-setting:
    put:
      summary: ''
      operationId: putApiSteamaMetersSteamaSettingSyncSetting
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/steama-meters/steama-setting/feedback-word:
    get:
      summary: ''
      operationId: getApiSteamaMetersSteamaSettingFeedbackWord
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/steama-meters/steama-setting/feedback-word/{smsFeedbackWord_id}':
    put:
      summary: ''
      operationId: putApiSteamaMetersSteamaSettingFeedbackWordSmsFeedbackWord_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: smsFeedbackWord_id
        description: 'The ID of the smsFeedbackWord.'
        example: 8
        required: true
        schema:
          type: integer
  /api/kelin-meters/kelin-credential:
    get:
      summary: ''
      operationId: getApiKelinMetersKelinCredential
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiKelinMetersKelinCredential
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: ''
                  example: sequi
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: quidem
                  nullable: false
              required:
                - username
                - password
      security: []
  /api/kelin-meters/kelin-customer:
    get:
      summary: ''
      operationId: getApiKelinMetersKelinCustomer
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/kelin-meters/kelin-customer/sync:
    get:
      summary: ''
      operationId: getApiKelinMetersKelinCustomerSync
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/kelin-meters/kelin-customer/sync-check:
    get:
      summary: ''
      operationId: getApiKelinMetersKelinCustomerSyncCheck
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/kelin-meters/kelin-meter:
    get:
      summary: ''
      operationId: getApiKelinMetersKelinMeter
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/kelin-meters/kelin-meter/sync:
    get:
      summary: ''
      operationId: getApiKelinMetersKelinMeterSync
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/kelin-meters/kelin-meter/sync-check:
    get:
      summary: ''
      operationId: getApiKelinMetersKelinMeterSyncCheck
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/kelin-meters/kelin-meter/daily-consumptions/{meter_id}':
    get:
      summary: ''
      operationId: getApiKelinMetersKelinMeterDailyConsumptionsMeter_id
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: meter_id
        description: 'The ID of the meter.'
        example: 17
        required: true
        schema:
          type: integer
  '/api/kelin-meters/kelin-meter/minutely-consumptions/{meter_id}':
    get:
      summary: ''
      operationId: getApiKelinMetersKelinMeterMinutelyConsumptionsMeter_id
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: meter_id
        description: 'The ID of the meter.'
        example: 3
        required: true
        schema:
          type: integer
  '/api/kelin-meters/kelin-meter/status/{meter_id}':
    get:
      summary: ''
      operationId: getApiKelinMetersKelinMeterStatusMeter_id
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiKelinMetersKelinMeterStatusMeter_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: meter_id
        description: 'The ID of the meter.'
        example: 2
        required: true
        schema:
          type: integer
  /api/kelin-meters/kelin-setting:
    get:
      summary: ''
      operationId: getApiKelinMetersKelinSetting
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/kelin-meters/kelin-setting/sync-setting:
    put:
      summary: ''
      operationId: putApiKelinMetersKelinSettingSyncSetting
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/calin-meters/calin-credential:
    get:
      summary: ''
      operationId: getApiCalinMetersCalinCredential
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiCalinMetersCalinCredential
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: laborum
                  nullable: false
                api_key:
                  type: string
                  description: ''
                  example: distinctio
                  nullable: false
              required:
                - user_id
                - api_key
      security: []
  /api/stron-meters/stron-credential:
    get:
      summary: ''
      operationId: getApiStronMetersStronCredential
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiStronMetersStronCredential
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                company_name:
                  type: string
                  description: ''
                  example: consequuntur
                  nullable: false
                username:
                  type: string
                  description: ''
                  example: at
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: vero
                  nullable: false
              required:
                - company_name
                - username
                - password
      security: []
  /api/calin-smart-meters/calin-smart-credential:
    get:
      summary: ''
      operationId: getApiCalinSmartMetersCalinSmartCredential
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiCalinSmartMetersCalinSmartCredential
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                company_name:
                  type: string
                  description: ''
                  example: qui
                  nullable: false
                user_name:
                  type: string
                  description: ''
                  example: neque
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: reprehenderit
                  nullable: false
                password_vend:
                  type: string
                  description: ''
                  example: laudantium
                  nullable: false
              required:
                - company_name
                - user_name
                - password
                - password_vend
      security: []
  /api/swifta/validation:
    post:
      summary: ''
      operationId: postApiSwiftaValidation
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                meter_number:
                  type: string
                  description: ''
                  example: laboriosam
                  nullable: false
                amount:
                  type: string
                  description: ''
                  example: repellendus
                  nullable: false
                cipher:
                  type: string
                  description: ''
                  example: natus
                  nullable: false
                timestamp:
                  type: string
                  description: ''
                  example: velit
                  nullable: false
              required:
                - meter_number
                - amount
                - cipher
                - timestamp
      security: []
  /api/swifta/transaction:
    post:
      summary: ''
      operationId: postApiSwiftaTransaction
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transaction_id:
                  type: string
                  description: ''
                  example: est
                  nullable: false
                transaction_reference:
                  type: string
                  description: ''
                  example: fugiat
                  nullable: false
                cipher:
                  type: string
                  description: ''
                  example: labore
                  nullable: false
                amount:
                  type: string
                  description: ''
                  example: blanditiis
                  nullable: false
                timestamp:
                  type: string
                  description: ''
                  example: reiciendis
                  nullable: false
              required:
                - transaction_id
                - transaction_reference
                - cipher
                - amount
                - timestamp
      security: []
  /api/swifta-payment/authentication:
    get:
      summary: ''
      operationId: getApiSwiftaPaymentAuthentication
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/mesomb:
    post:
      summary: ''
      operationId: postApiMesomb
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/bulk-register/import-csv:
    post:
      summary: ''
      operationId: postApiBulkRegisterImportCsv
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                csv:
                  type: string
                  description: ''
                  example: aut
                  nullable: false
              required:
                - csv
      security: []
  /api/viber-messaging/viber-credential:
    get:
      summary: ''
      operationId: getApiViberMessagingViberCredential
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiViberMessagingViberCredential
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                api_token:
                  type: string
                  description: ''
                  example: corrupti
                  nullable: false
              required:
                - api_token
      security: []
  '/api/viber-messaging/webhook/{slug}':
    post:
      summary: ''
      operationId: postApiViberMessagingWebhookSlug
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: slug
        description: 'The slug of the webhook.'
        example: ad
        required: true
        schema:
          type: string
  /api/wave-money/wave-money-credential:
    get:
      summary: ''
      operationId: getApiWaveMoneyWaveMoneyCredential
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiWaveMoneyWaveMoneyCredential
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                merchant_id:
                  type: string
                  description: ''
                  example: illum
                  nullable: false
                secret_key:
                  type: string
                  description: ''
                  example: assumenda
                  nullable: false
              required:
                - merchant_id
                - secret_key
      security: []
  '/api/wave-money/wave-money-transaction/start/{slug}':
    post:
      summary: ''
      operationId: postApiWaveMoneyWaveMoneyTransactionStartSlug
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                meterSerial:
                  type: string
                  description: ''
                  example: illum
                  nullable: false
                amount:
                  type: number
                  description: ''
                  example: 0.0
                  nullable: false
              required:
                - meterSerial
                - amount
      security: []
    parameters:
      -
        in: path
        name: slug
        description: 'The slug of the start.'
        example: maxime
        required: true
        schema:
          type: string
  '/api/wave-money/wave-money-transaction/callback/{slug}':
    post:
      summary: ''
      operationId: postApiWaveMoneyWaveMoneyTransactionCallbackSlug
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: slug
        description: 'The slug of the callback.'
        example: at
        required: true
        schema:
          type: string
  /api/micro-star-meters/micro-star-credential:
    get:
      summary: ''
      operationId: getApiMicroStarMetersMicroStarCredential
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiMicroStarMetersMicroStarCredential
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                api_url:
                  type: string
                  description: ''
                  example: sed
                  nullable: false
                certificate_password:
                  type: string
                  description: ''
                  example: velit
                  nullable: false
              required:
                - api_url
                - certificate_password
      security: []
  /api/micro-star-meters/micro-star-cert:
    get:
      summary: ''
      operationId: getApiMicroStarMetersMicroStarCert
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiMicroStarMetersMicroStarCert
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cert:
                  type: string
                  description: ''
                  example: nemo
                  nullable: false
              required:
                - cert
      security: []
  /api/micro-star-meters/test:
    get:
      summary: ''
      operationId: getApiMicroStarMetersTest
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/sun-king-shs/sun-king-credential:
    get:
      summary: ''
      operationId: getApiSunKingShsSunKingCredential
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiSunKingShsSunKingCredential
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                client_id:
                  type: string
                  description: ''
                  example: et
                  nullable: false
                client_secret:
                  type: string
                  description: ''
                  example: minus
                  nullable: false
              required:
                - client_id
                - client_secret
      security: []
  /api/gome-long-meters/gome-long-credential:
    get:
      summary: ''
      operationId: getApiGomeLongMetersGomeLongCredential
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiGomeLongMetersGomeLongCredential
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: vel
                  nullable: false
                user_password:
                  type: string
                  description: ''
                  example: sed
                  nullable: false
              required:
                - user_id
                - user_password
      security: []
  /api/wavecom/upload:
    post:
      summary: ''
      operationId: postApiWavecomUpload
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transaction_file:
                  type: string
                  description: ''
                  example: quas
                  nullable: false
              required:
                - transaction_file
      security: []
  /api/angaza-shs/angaza-credential:
    get:
      summary: ''
      operationId: getApiAngazaShsAngazaCredential
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiAngazaShsAngazaCredential
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                client_id:
                  type: string
                  description: ''
                  example: odio
                  nullable: false
                client_secret:
                  type: string
                  description: ''
                  example: eius
                  nullable: false
              required:
                - client_id
                - client_secret
      security: []
  /api/daly-bms/daly-bms-credential:
    get:
      summary: ''
      operationId: getApiDalyBmsDalyBmsCredential
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiDalyBmsDalyBmsCredential
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_name:
                  type: string
                  description: ''
                  example: ut
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: tempore
                  nullable: false
              required:
                - user_name
                - password
      security: []
  /api/meter-types:
    get:
      summary: List.
      operationId: list
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      online: 0
                      phase: 1
                      max_current: 10
                      created_at: '2018-06-22 08:15:12'
                      updated_at: '2018-06-22 08:15:12'
                    -
                      id: 2
                      online: 0
                      phase: 3
                      max_current: 20
                      created_at: '2018-07-27 10:25:15'
                      updated_at: '2018-07-27 10:25:15'
                    -
                      id: 3
                      online: 1
                      phase: 1
                      max_current: 10
                      created_at: null
                      updated_at: null
                    -
                      id: 4
                      online: 1
                      phase: 3
                      max_current: 20
                      created_at: null
                      updated_at: null
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        online: 0
                        phase: 1
                        max_current: 10
                        created_at: '2018-06-22 08:15:12'
                        updated_at: '2018-06-22 08:15:12'
                      -
                        id: 2
                        online: 0
                        phase: 3
                        max_current: 20
                        created_at: '2018-07-27 10:25:15'
                        updated_at: '2018-07-27 10:25:15'
                      -
                        id: 3
                        online: 1
                        phase: 1
                        max_current: 10
                        created_at: null
                        updated_at: null
                      -
                        id: 4
                        online: 1
                        phase: 3
                        max_current: 20
                        created_at: null
                        updated_at: null
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        online:
                          type: integer
                          example: 0
                        phase:
                          type: integer
                          example: 1
                        max_current:
                          type: integer
                          example: 10
                        created_at:
                          type: string
                          example: '2018-06-22 08:15:12'
                        updated_at:
                          type: string
                          example: '2018-06-22 08:15:12'
      tags:
        - MeterTypes
      security: []
    post:
      summary: "Store\nCreates a new meter type."
      operationId: storeCreatesANewMeterType
      description: ''
      parameters: []
      responses: {  }
      tags:
        - MeterTypes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                max_current:
                  type: integer
                  description: ''
                  example: 10
                  nullable: false
                phase:
                  type: integer
                  description: ''
                  example: 9
                  nullable: false
                online:
                  type: integer
                  description: ''
                  example: 13
                  nullable: false
              required:
                - max_current
                - phase
                - online
      security: []
  '/api/meter-types/{meterTypeId}':
    get:
      summary: Detail.
      operationId: detail
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - MeterTypes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 7
                  nullable: false
              required:
                - id
      security: []
    put:
      summary: "Update\nUpdates the given meter type."
      operationId: updateUpdatesTheGivenMeterType
      description: ''
      parameters: []
      responses: {  }
      tags:
        - MeterTypes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                max_current:
                  type: integer
                  description: ''
                  example: 1
                  nullable: false
                phase:
                  type: integer
                  description: ''
                  example: 5
                  nullable: false
                online:
                  type: integer
                  description: ''
                  example: 20
                  nullable: false
              required:
                - max_current
                - phase
                - online
      security: []
    parameters:
      -
        in: path
        name: meterTypeId
        description: ''
        example: unde
        required: true
        schema:
          type: string
  /api/customer-registration-app/meter-types:
    get:
      summary: List.
      operationId: list
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      online: 0
                      phase: 1
                      max_current: 10
                      created_at: '2018-06-22 08:15:12'
                      updated_at: '2018-06-22 08:15:12'
                    -
                      id: 2
                      online: 0
                      phase: 3
                      max_current: 20
                      created_at: '2018-07-27 10:25:15'
                      updated_at: '2018-07-27 10:25:15'
                    -
                      id: 3
                      online: 1
                      phase: 1
                      max_current: 10
                      created_at: null
                      updated_at: null
                    -
                      id: 4
                      online: 1
                      phase: 3
                      max_current: 20
                      created_at: null
                      updated_at: null
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        online: 0
                        phase: 1
                        max_current: 10
                        created_at: '2018-06-22 08:15:12'
                        updated_at: '2018-06-22 08:15:12'
                      -
                        id: 2
                        online: 0
                        phase: 3
                        max_current: 20
                        created_at: '2018-07-27 10:25:15'
                        updated_at: '2018-07-27 10:25:15'
                      -
                        id: 3
                        online: 1
                        phase: 1
                        max_current: 10
                        created_at: null
                        updated_at: null
                      -
                        id: 4
                        online: 1
                        phase: 3
                        max_current: 20
                        created_at: null
                        updated_at: null
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        online:
                          type: integer
                          example: 0
                        phase:
                          type: integer
                          example: 1
                        max_current:
                          type: integer
                          example: 10
                        created_at:
                          type: string
                          example: '2018-06-22 08:15:12'
                        updated_at:
                          type: string
                          example: '2018-06-22 08:15:12'
      tags:
        - MeterTypes
      security: []
  '/api/meters/{serialNumber}/revenue':
    get:
      summary: "Revenue\nThe total revenue that the meter made."
      operationId: revenueTheTotalRevenueThatTheMeterMade
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    revenue: '373750'
                properties:
                  data:
                    type: object
                    properties:
                      revenue:
                        type: string
                        example: '373750'
      tags:
        - Meters
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                serialNumber:
                  type: string
                  description: required.
                  example: debitis
                  nullable: false
      security: []
    parameters:
      -
        in: path
        name: serialNumber
        description: ''
        example: aliquam
        required: true
        schema:
          type: string
  '/api/paymenthistories/{personId}/flow/{year}':
    get:
      summary: 'Person payment flow per year.'
      operationId: personPaymentFlowPerYear
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Payment-History
      security: []
    parameters:
      -
        in: path
        name: personId
        description: ''
        example: 2
        required: true
        schema:
          type: integer
      -
        in: path
        name: year
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: officia
  '/api/paymenthistories/{person_id}/period':
    get:
      summary: 'Payment Periods.'
      operationId: paymentPeriods
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Payment-History
      security: []
    parameters:
      -
        in: path
        name: person_id
        description: 'The ID of the person.'
        example: 10
        required: true
        schema:
          type: integer
      -
        in: path
        name: personId
        description: ''
        example: 7
        required: true
        schema:
          type: integer
  '/api/paymenthistories/debt/{personId}':
    get:
      summary: 'Person Debts.'
      operationId: personDebts
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Payment-History
      security: []
    parameters:
      -
        in: path
        name: personId
        description: 'checks if the person has any debts to the system'
        example: 4
        required: true
        schema:
          type: integer
  /api/paymenthistories/overview:
    post:
      summary: 'Payments list with date range.'
      operationId: paymentsListWithDateRange
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Payment-History
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                begin:
                  type: string
                  description: ''
                  example: explicabo
                  nullable: false
                end:
                  type: string
                  description: ''
                  example: ea
                  nullable: false
      security: []
  '/api/paymenthistories/{personId}/payments/{period}/{limit}/{order}':
    get:
      summary: Detail.
      operationId: detail
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Payment-History
      security: []
    parameters:
      -
        in: path
        name: personId
        description: ''
        example: 795
        required: true
        schema:
          type: integer
      -
        in: path
        name: period
        description: ''
        example: deserunt
        required: true
        schema:
          type: string
      -
        in: path
        name: limit
        description: 'Optional parameter.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 4
      -
        in: path
        name: order
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: quam
      -
        in: path
        name: payerId
        description: ''
        example: 14
        required: true
        schema:
          type: integer
  /api/customer-registration-app/people:
    get:
      summary: "List customer/other\n[ To get a list of registered customers or non-customer like contact person of Meter Manufacturer. ]."
      operationId: listCustomerotherToGetAListOfRegisteredCustomersOrNonCustomerLikeContactPersonOfMeterManufacturer
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data:
                    -
                      id: 1
                      title: null
                      education: null
                      name: John
                      surname: Doe
                      birth_date: '1970-01-01'
                      sex: male
                      nationality: null
                      created_at: '2018-06-22 11:49:57'
                      updated_at: '2019-07-02 06:45:01'
                      customer_group_id: null
                      is_customer: 1
                      deleted_at: null
                      addresses: []
                      meters:
                        -
                          id: 1
                          connection_type_id: 1
                          created_at: '2018-06-22 11:59:46'
                          updated_at: '2018-12-17 14:20:23'
                          connection_group_id: 1
                          meter:
                            id: 1
                            serial_number: '47000124512'
                            meter_type_id: 1
                            in_use: 1
                            manufacturer_id: 1
                            created_at: '2018-06-22 11:50:09'
                            updated_at: '2018-12-17 14:20:23'
                            deleted_at: null
                  first_page_url: 'http://mpmanager.com/api/people?page=1'
                  from: 1
                  last_page: 331
                  last_page_url: 'http://mpmanager.com/api/people?page=331'
                  next_page_url: 'http://mpmanager.com/api/people?page=2'
                  path: 'http://mpmanager.com/api/people'
                  per_page: 15
                  prev_page_url: null
                  to: 15
                  total: 4963
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        title: null
                        education: null
                        name: John
                        surname: Doe
                        birth_date: '1970-01-01'
                        sex: male
                        nationality: null
                        created_at: '2018-06-22 11:49:57'
                        updated_at: '2019-07-02 06:45:01'
                        customer_group_id: null
                        is_customer: 1
                        deleted_at: null
                        addresses: []
                        meters:
                          -
                            id: 1
                            connection_type_id: 1
                            created_at: '2018-06-22 11:59:46'
                            updated_at: '2018-12-17 14:20:23'
                            connection_group_id: 1
                            meter:
                              id: 1
                              serial_number: '47000124512'
                              meter_type_id: 1
                              in_use: 1
                              manufacturer_id: 1
                              created_at: '2018-06-22 11:50:09'
                              updated_at: '2018-12-17 14:20:23'
                              deleted_at: null
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        title:
                          type: string
                          example: null
                        education:
                          type: string
                          example: null
                        name:
                          type: string
                          example: John
                        surname:
                          type: string
                          example: Doe
                        birth_date:
                          type: string
                          example: '1970-01-01'
                        sex:
                          type: string
                          example: male
                        nationality:
                          type: string
                          example: null
                        created_at:
                          type: string
                          example: '2018-06-22 11:49:57'
                        updated_at:
                          type: string
                          example: '2019-07-02 06:45:01'
                        customer_group_id:
                          type: string
                          example: null
                        is_customer:
                          type: integer
                          example: 1
                        deleted_at:
                          type: string
                          example: null
                        addresses:
                          type: array
                          example: []
                        meters:
                          type: array
                          example:
                            -
                              id: 1
                              connection_type_id: 1
                              created_at: '2018-06-22 11:59:46'
                              updated_at: '2018-12-17 14:20:23'
                              connection_group_id: 1
                              meter:
                                id: 1
                                serial_number: '47000124512'
                                meter_type_id: 1
                                in_use: 1
                                manufacturer_id: 1
                                created_at: '2018-06-22 11:50:09'
                                updated_at: '2018-12-17 14:20:23'
                                deleted_at: null
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 1
                              connection_type_id:
                                type: integer
                                example: 1
                              created_at:
                                type: string
                                example: '2018-06-22 11:59:46'
                              updated_at:
                                type: string
                                example: '2018-12-17 14:20:23'
                              connection_group_id:
                                type: integer
                                example: 1
                              meter:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                    example: 1
                                  serial_number:
                                    type: string
                                    example: '47000124512'
                                  meter_type_id:
                                    type: integer
                                    example: 1
                                  in_use:
                                    type: integer
                                    example: 1
                                  manufacturer_id:
                                    type: integer
                                    example: 1
                                  created_at:
                                    type: string
                                    example: '2018-06-22 11:50:09'
                                  updated_at:
                                    type: string
                                    example: '2018-12-17 14:20:23'
                                  deleted_at:
                                    type: string
                                    example: null
                  first_page_url:
                    type: string
                    example: 'http://mpmanager.com/api/people?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 331
                  last_page_url:
                    type: string
                    example: 'http://mpmanager.com/api/people?page=331'
                  next_page_url:
                    type: string
                    example: 'http://mpmanager.com/api/people?page=2'
                  path:
                    type: string
                    example: 'http://mpmanager.com/api/people'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 15
                  total:
                    type: integer
                    example: 4963
      tags:
        - People
      security: []
    parameters:
      -
        in: path
        name: is_customer
        description: 'Optional parameter. optinal. To get a list of customers or non customer. Default : 1'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 14
  '/api/people/{personId}/meters':
    get:
      summary: "Person with Meters & Tariff\nPerson details with his/her owned meter(s) and its assigned tariff"
      operationId: personWithMetersTariffPersonDetailsWithHisherOwnedMetersAndItsAssignedTariff
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    title: null
                    education: null
                    name: John
                    surname: Doe
                    birth_date: '1970-01-01'
                    sex: null
                    nationality: null
                    created_at: '2018-06-22 11:49:57'
                    updated_at: '2020-03-31 09:59:08'
                    customer_group_id: null
                    is_customer: 1
                    deleted_at: null
                    meters:
                      -
                        id: 1
                        connection_type_id: 1
                        created_at: '2018-06-22 11:59:46'
                        updated_at: '2018-12-17 14:20:23'
                        connection_group_id: 1
                        tariff:
                          id: 1
                          name: 'Productive Usage'
                          price: 20
                          currency: EUR
                          factor: 1
                          created_at: '2018-07-27 15:32:42'
                          updated_at: '2018-07-27 15:32:42'
                          deleted_at: null
                        meter:
                          id: 1
                          serial_number: '123123123'
                          meter_type_id: 1
                          in_use: 1
                          manufacturer_id: 1
                          created_at: '2018-06-22 11:50:09'
                          updated_at: '2018-12-17 14:20:23'
                          deleted_at: null
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      title:
                        type: string
                        example: null
                      education:
                        type: string
                        example: null
                      name:
                        type: string
                        example: John
                      surname:
                        type: string
                        example: Doe
                      birth_date:
                        type: string
                        example: '1970-01-01'
                      sex:
                        type: string
                        example: null
                      nationality:
                        type: string
                        example: null
                      created_at:
                        type: string
                        example: '2018-06-22 11:49:57'
                      updated_at:
                        type: string
                        example: '2020-03-31 09:59:08'
                      customer_group_id:
                        type: string
                        example: null
                      is_customer:
                        type: integer
                        example: 1
                      deleted_at:
                        type: string
                        example: null
                      meters:
                        type: array
                        example:
                          -
                            id: 1
                            connection_type_id: 1
                            created_at: '2018-06-22 11:59:46'
                            updated_at: '2018-12-17 14:20:23'
                            connection_group_id: 1
                            tariff:
                              id: 1
                              name: 'Productive Usage'
                              price: 20
                              currency: EUR
                              factor: 1
                              created_at: '2018-07-27 15:32:42'
                              updated_at: '2018-07-27 15:32:42'
                              deleted_at: null
                            meter:
                              id: 1
                              serial_number: '123123123'
                              meter_type_id: 1
                              in_use: 1
                              manufacturer_id: 1
                              created_at: '2018-06-22 11:50:09'
                              updated_at: '2018-12-17 14:20:23'
                              deleted_at: null
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            connection_type_id:
                              type: integer
                              example: 1
                            created_at:
                              type: string
                              example: '2018-06-22 11:59:46'
                            updated_at:
                              type: string
                              example: '2018-12-17 14:20:23'
                            connection_group_id:
                              type: integer
                              example: 1
                            tariff:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 1
                                name:
                                  type: string
                                  example: 'Productive Usage'
                                price:
                                  type: integer
                                  example: 20
                                currency:
                                  type: string
                                  example: EUR
                                factor:
                                  type: integer
                                  example: 1
                                created_at:
                                  type: string
                                  example: '2018-07-27 15:32:42'
                                updated_at:
                                  type: string
                                  example: '2018-07-27 15:32:42'
                                deleted_at:
                                  type: string
                                  example: null
                            meter:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 1
                                serial_number:
                                  type: string
                                  example: '123123123'
                                meter_type_id:
                                  type: integer
                                  example: 1
                                in_use:
                                  type: integer
                                  example: 1
                                manufacturer_id:
                                  type: integer
                                  example: 1
                                created_at:
                                  type: string
                                  example: '2018-06-22 11:50:09'
                                updated_at:
                                  type: string
                                  example: '2018-12-17 14:20:23'
                                deleted_at:
                                  type: string
                                  example: null
      tags:
        - People
      security: []
    parameters:
      -
        in: path
        name: personId
        description: ''
        example: veniam
        required: true
        schema:
          type: string
      -
        in: path
        name: person
        description: 'The ID of the person'
        example: incidunt
        required: true
        schema:
          type: string
  '/api/people/{personId}/meters/geo':
    get:
      summary: "Person with Meters & geo\nPerson details with his/her owned meter(s) and the geo coordinates where each meter is placed\n- Meters\n  - Meter coordinates\nA list of meters which belong to that given person\nThe list is wether sorted or paginated"
      operationId: personWithMetersGeoPersonDetailsWithHisherOwnedMetersAndTheGeoCoordinatesWhereEachMeterIsPlacedMetersMeterCoordinatesAListOfMetersWhichBelongToThatGivenPersonTheListIsWetherSortedOrPaginated
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    title: null
                    education: null
                    name: John
                    surname: Doe
                    birth_date: '1970-01-01'
                    sex: null
                    nationality: null
                    created_at: '2018-06-22 11:49:57'
                    updated_at: '2020-03-31 09:59:08'
                    customer_group_id: null
                    is_customer: 1
                    deleted_at: null
                    meters:
                      -
                        id: 1
                        connection_type_id: 1
                        created_at: '2018-06-22 11:59:46'
                        updated_at: '2018-12-17 14:20:23'
                        connection_group_id: 1
                        meter:
                          id: 1
                          serial_number: '123123123'
                          meter_type_id: 1
                          in_use: 1
                          manufacturer_id: 1
                          created_at: '2018-06-22 11:50:09'
                          updated_at: '2018-12-17 14:20:23'
                          deleted_at: null
                        geo:
                          id: 1
                          owner_id: 1
                          owner_type: meter_parameter
                          points: '1.8231,14.0121'
                          created_at: '2018-06-22 08:59:46'
                          updated_at: '2019-08-09 09:47:54'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      title:
                        type: string
                        example: null
                      education:
                        type: string
                        example: null
                      name:
                        type: string
                        example: John
                      surname:
                        type: string
                        example: Doe
                      birth_date:
                        type: string
                        example: '1970-01-01'
                      sex:
                        type: string
                        example: null
                      nationality:
                        type: string
                        example: null
                      created_at:
                        type: string
                        example: '2018-06-22 11:49:57'
                      updated_at:
                        type: string
                        example: '2020-03-31 09:59:08'
                      customer_group_id:
                        type: string
                        example: null
                      is_customer:
                        type: integer
                        example: 1
                      deleted_at:
                        type: string
                        example: null
                      meters:
                        type: array
                        example:
                          -
                            id: 1
                            connection_type_id: 1
                            created_at: '2018-06-22 11:59:46'
                            updated_at: '2018-12-17 14:20:23'
                            connection_group_id: 1
                            meter:
                              id: 1
                              serial_number: '123123123'
                              meter_type_id: 1
                              in_use: 1
                              manufacturer_id: 1
                              created_at: '2018-06-22 11:50:09'
                              updated_at: '2018-12-17 14:20:23'
                              deleted_at: null
                            geo:
                              id: 1
                              owner_id: 1
                              owner_type: meter_parameter
                              points: '1.8231,14.0121'
                              created_at: '2018-06-22 08:59:46'
                              updated_at: '2019-08-09 09:47:54'
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            connection_type_id:
                              type: integer
                              example: 1
                            created_at:
                              type: string
                              example: '2018-06-22 11:59:46'
                            updated_at:
                              type: string
                              example: '2018-12-17 14:20:23'
                            connection_group_id:
                              type: integer
                              example: 1
                            meter:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 1
                                serial_number:
                                  type: string
                                  example: '123123123'
                                meter_type_id:
                                  type: integer
                                  example: 1
                                in_use:
                                  type: integer
                                  example: 1
                                manufacturer_id:
                                  type: integer
                                  example: 1
                                created_at:
                                  type: string
                                  example: '2018-06-22 11:50:09'
                                updated_at:
                                  type: string
                                  example: '2018-12-17 14:20:23'
                                deleted_at:
                                  type: string
                                  example: null
                            geo:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 1
                                owner_id:
                                  type: integer
                                  example: 1
                                owner_type:
                                  type: string
                                  example: meter_parameter
                                points:
                                  type: string
                                  example: '1.8231,14.0121'
                                created_at:
                                  type: string
                                  example: '2018-06-22 08:59:46'
                                updated_at:
                                  type: string
                                  example: '2019-08-09 09:47:54'
      tags:
        - People
      security: []
    parameters:
      -
        in: path
        name: personId
        description: ''
        example: nihil
        required: true
        schema:
          type: string
      -
        in: path
        name: person
        description: 'The ID of the person'
        example: deleniti
        required: true
        schema:
          type: string
  /api/people:
    get:
      summary: "List customer/other\n[ To get a list of registered customers or non-customer like contact person of Meter Manufacturer. ]."
      operationId: listCustomerotherToGetAListOfRegisteredCustomersOrNonCustomerLikeContactPersonOfMeterManufacturer
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data:
                    -
                      id: 1
                      title: null
                      education: null
                      name: John
                      surname: Doe
                      birth_date: '1970-01-01'
                      sex: male
                      nationality: null
                      created_at: '2018-06-22 11:49:57'
                      updated_at: '2019-07-02 06:45:01'
                      customer_group_id: null
                      is_customer: 1
                      deleted_at: null
                      addresses: []
                      meters:
                        -
                          id: 1
                          connection_type_id: 1
                          created_at: '2018-06-22 11:59:46'
                          updated_at: '2018-12-17 14:20:23'
                          connection_group_id: 1
                          meter:
                            id: 1
                            serial_number: '47000124512'
                            meter_type_id: 1
                            in_use: 1
                            manufacturer_id: 1
                            created_at: '2018-06-22 11:50:09'
                            updated_at: '2018-12-17 14:20:23'
                            deleted_at: null
                  first_page_url: 'http://mpmanager.com/api/people?page=1'
                  from: 1
                  last_page: 331
                  last_page_url: 'http://mpmanager.com/api/people?page=331'
                  next_page_url: 'http://mpmanager.com/api/people?page=2'
                  path: 'http://mpmanager.com/api/people'
                  per_page: 15
                  prev_page_url: null
                  to: 15
                  total: 4963
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        title: null
                        education: null
                        name: John
                        surname: Doe
                        birth_date: '1970-01-01'
                        sex: male
                        nationality: null
                        created_at: '2018-06-22 11:49:57'
                        updated_at: '2019-07-02 06:45:01'
                        customer_group_id: null
                        is_customer: 1
                        deleted_at: null
                        addresses: []
                        meters:
                          -
                            id: 1
                            connection_type_id: 1
                            created_at: '2018-06-22 11:59:46'
                            updated_at: '2018-12-17 14:20:23'
                            connection_group_id: 1
                            meter:
                              id: 1
                              serial_number: '47000124512'
                              meter_type_id: 1
                              in_use: 1
                              manufacturer_id: 1
                              created_at: '2018-06-22 11:50:09'
                              updated_at: '2018-12-17 14:20:23'
                              deleted_at: null
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        title:
                          type: string
                          example: null
                        education:
                          type: string
                          example: null
                        name:
                          type: string
                          example: John
                        surname:
                          type: string
                          example: Doe
                        birth_date:
                          type: string
                          example: '1970-01-01'
                        sex:
                          type: string
                          example: male
                        nationality:
                          type: string
                          example: null
                        created_at:
                          type: string
                          example: '2018-06-22 11:49:57'
                        updated_at:
                          type: string
                          example: '2019-07-02 06:45:01'
                        customer_group_id:
                          type: string
                          example: null
                        is_customer:
                          type: integer
                          example: 1
                        deleted_at:
                          type: string
                          example: null
                        addresses:
                          type: array
                          example: []
                        meters:
                          type: array
                          example:
                            -
                              id: 1
                              connection_type_id: 1
                              created_at: '2018-06-22 11:59:46'
                              updated_at: '2018-12-17 14:20:23'
                              connection_group_id: 1
                              meter:
                                id: 1
                                serial_number: '47000124512'
                                meter_type_id: 1
                                in_use: 1
                                manufacturer_id: 1
                                created_at: '2018-06-22 11:50:09'
                                updated_at: '2018-12-17 14:20:23'
                                deleted_at: null
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 1
                              connection_type_id:
                                type: integer
                                example: 1
                              created_at:
                                type: string
                                example: '2018-06-22 11:59:46'
                              updated_at:
                                type: string
                                example: '2018-12-17 14:20:23'
                              connection_group_id:
                                type: integer
                                example: 1
                              meter:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                    example: 1
                                  serial_number:
                                    type: string
                                    example: '47000124512'
                                  meter_type_id:
                                    type: integer
                                    example: 1
                                  in_use:
                                    type: integer
                                    example: 1
                                  manufacturer_id:
                                    type: integer
                                    example: 1
                                  created_at:
                                    type: string
                                    example: '2018-06-22 11:50:09'
                                  updated_at:
                                    type: string
                                    example: '2018-12-17 14:20:23'
                                  deleted_at:
                                    type: string
                                    example: null
                  first_page_url:
                    type: string
                    example: 'http://mpmanager.com/api/people?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 331
                  last_page_url:
                    type: string
                    example: 'http://mpmanager.com/api/people?page=331'
                  next_page_url:
                    type: string
                    example: 'http://mpmanager.com/api/people?page=2'
                  path:
                    type: string
                    example: 'http://mpmanager.com/api/people'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 15
                  total:
                    type: integer
                    example: 4963
      tags:
        - People
      security: []
    post:
      summary: Create.
      operationId: create
      description: ''
      parameters: []
      responses: {  }
      tags:
        - People
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'required. The title of the person.'
                  example: Dr.
                  nullable: false
                name:
                  type: string
                  description: required.
                  example: John
                  nullable: false
                surname:
                  type: string
                  description: required.
                  example: Doe
                  nullable: false
                email:
                  type: string.
                  description: ''
                  example: john.doe@mail.com
                  nullable: false
                phone:
                  type: string.
                  description: ''
                  example: '+1111'
                  nullable: false
                birth_date:
                  type: string.
                  description: ''
                  example: '1970-01-01'
                  nullable: false
                sex:
                  type: string
                  description: ''
                  example: male
                  nullable: false
                education:
                  type: string.
                  description: ''
                  example: University
                  nullable: false
                city_id:
                  type: int.
                  description: ''
                  example: '1'
                  nullable: false
                street:
                  type: string.
                  description: ''
                  example: 'Some Street 1/13'
                  nullable: false
                nationality:
                  type: string.
                  description: ''
                  example: 'Earth Citizen'
                  nullable: false
              required:
                - sex
      security: []
    parameters:
      -
        in: path
        name: is_customer
        description: 'Optional parameter. optinal. To get a list of customers or non customer. Default : 1'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 9
  /api/people/search:
    get:
      summary: "Search\nSearches in person list according to the search term."
      operationId: searchSearchesInPersonListAccordingToTheSearchTerm
      description: "Term could be one of the following attributes;\n- phone number\n- meter serial number\n- name\n- surname."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data:
                    -
                      id: 1
                      title: null
                      education: null
                      name: John
                      surname: Doe
                      birth_date: '1970-01-01'
                      sex: null
                      nationality: null
                      created_at: '2018-06-22 11:49:57'
                      updated_at: '2020-03-31 09:59:08'
                      customer_group_id: null
                      is_customer: 1
                      deleted_at: null
                      addresses:
                        -
                          id: 5
                          is_primary: 1
                          email: ''
                          phone: '+11111'
                          street: '-'
                          city_id: 1
                          geo_id: null
                          created_at: '2018-06-22 11:49:57'
                          updated_at: '2020-03-24 13:02:02'
                          city:
                            id: 1
                            name: 'Some Village'
                            country_id: 215
                            created_at: '2018-06-22 08:14:10'
                            updated_at: '2019-06-21 14:07:28'
                            cluster_id: 10
                            mini_grid_id: 1
                        -
                          id: 209
                          is_primary: 0
                          email: ''
                          phone: '+11111111'
                          street: ''
                          city_id: 1
                          geo_id: null
                          created_at: '2018-11-15 08:57:47'
                          updated_at: '2020-03-24 13:01:57'
                          city:
                            id: 1
                            name: 'Some Village'
                            country_id: 215
                            created_at: '2018-06-22 08:14:10'
                            updated_at: '2019-06-21 14:07:28'
                            cluster_id: 10
                            mini_grid_id: 1
                      meters:
                        -
                          id: 1
                          connection_type_id: 1
                          created_at: '2018-06-22 11:59:46'
                          updated_at: '2018-12-17 14:20:23'
                          connection_group_id: 1
                          meter:
                            id: 1
                            serial_number: '1231321231'
                            meter_type_id: 1
                            in_use: 1
                            manufacturer_id: 1
                            created_at: '2018-06-22 11:50:09'
                            updated_at: '2018-12-17 14:20:23'
                            deleted_at: null
                  first_page_url: 'http://localhost:8000/api/people/search?page=1'
                  from: 1
                  last_page: 1
                  last_page_url: 'http://localhost:8000/api/people/search?page=1'
                  next_page_url: null
                  path: 'http://localhost:8000/api/people/search'
                  per_page: 15
                  prev_page_url: null
                  to: 1
                  total: 1
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        title: null
                        education: null
                        name: John
                        surname: Doe
                        birth_date: '1970-01-01'
                        sex: null
                        nationality: null
                        created_at: '2018-06-22 11:49:57'
                        updated_at: '2020-03-31 09:59:08'
                        customer_group_id: null
                        is_customer: 1
                        deleted_at: null
                        addresses:
                          -
                            id: 5
                            is_primary: 1
                            email: ''
                            phone: '+11111'
                            street: '-'
                            city_id: 1
                            geo_id: null
                            created_at: '2018-06-22 11:49:57'
                            updated_at: '2020-03-24 13:02:02'
                            city:
                              id: 1
                              name: 'Some Village'
                              country_id: 215
                              created_at: '2018-06-22 08:14:10'
                              updated_at: '2019-06-21 14:07:28'
                              cluster_id: 10
                              mini_grid_id: 1
                          -
                            id: 209
                            is_primary: 0
                            email: ''
                            phone: '+11111111'
                            street: ''
                            city_id: 1
                            geo_id: null
                            created_at: '2018-11-15 08:57:47'
                            updated_at: '2020-03-24 13:01:57'
                            city:
                              id: 1
                              name: 'Some Village'
                              country_id: 215
                              created_at: '2018-06-22 08:14:10'
                              updated_at: '2019-06-21 14:07:28'
                              cluster_id: 10
                              mini_grid_id: 1
                        meters:
                          -
                            id: 1
                            connection_type_id: 1
                            created_at: '2018-06-22 11:59:46'
                            updated_at: '2018-12-17 14:20:23'
                            connection_group_id: 1
                            meter:
                              id: 1
                              serial_number: '1231321231'
                              meter_type_id: 1
                              in_use: 1
                              manufacturer_id: 1
                              created_at: '2018-06-22 11:50:09'
                              updated_at: '2018-12-17 14:20:23'
                              deleted_at: null
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        title:
                          type: string
                          example: null
                        education:
                          type: string
                          example: null
                        name:
                          type: string
                          example: John
                        surname:
                          type: string
                          example: Doe
                        birth_date:
                          type: string
                          example: '1970-01-01'
                        sex:
                          type: string
                          example: null
                        nationality:
                          type: string
                          example: null
                        created_at:
                          type: string
                          example: '2018-06-22 11:49:57'
                        updated_at:
                          type: string
                          example: '2020-03-31 09:59:08'
                        customer_group_id:
                          type: string
                          example: null
                        is_customer:
                          type: integer
                          example: 1
                        deleted_at:
                          type: string
                          example: null
                        addresses:
                          type: array
                          example:
                            -
                              id: 5
                              is_primary: 1
                              email: ''
                              phone: '+11111'
                              street: '-'
                              city_id: 1
                              geo_id: null
                              created_at: '2018-06-22 11:49:57'
                              updated_at: '2020-03-24 13:02:02'
                              city:
                                id: 1
                                name: 'Some Village'
                                country_id: 215
                                created_at: '2018-06-22 08:14:10'
                                updated_at: '2019-06-21 14:07:28'
                                cluster_id: 10
                                mini_grid_id: 1
                            -
                              id: 209
                              is_primary: 0
                              email: ''
                              phone: '+11111111'
                              street: ''
                              city_id: 1
                              geo_id: null
                              created_at: '2018-11-15 08:57:47'
                              updated_at: '2020-03-24 13:01:57'
                              city:
                                id: 1
                                name: 'Some Village'
                                country_id: 215
                                created_at: '2018-06-22 08:14:10'
                                updated_at: '2019-06-21 14:07:28'
                                cluster_id: 10
                                mini_grid_id: 1
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 5
                              is_primary:
                                type: integer
                                example: 1
                              email:
                                type: string
                                example: ''
                              phone:
                                type: string
                                example: '+11111'
                              street:
                                type: string
                                example: '-'
                              city_id:
                                type: integer
                                example: 1
                              geo_id:
                                type: string
                                example: null
                              created_at:
                                type: string
                                example: '2018-06-22 11:49:57'
                              updated_at:
                                type: string
                                example: '2020-03-24 13:02:02'
                              city:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                    example: 1
                                  name:
                                    type: string
                                    example: 'Some Village'
                                  country_id:
                                    type: integer
                                    example: 215
                                  created_at:
                                    type: string
                                    example: '2018-06-22 08:14:10'
                                  updated_at:
                                    type: string
                                    example: '2019-06-21 14:07:28'
                                  cluster_id:
                                    type: integer
                                    example: 10
                                  mini_grid_id:
                                    type: integer
                                    example: 1
                        meters:
                          type: array
                          example:
                            -
                              id: 1
                              connection_type_id: 1
                              created_at: '2018-06-22 11:59:46'
                              updated_at: '2018-12-17 14:20:23'
                              connection_group_id: 1
                              meter:
                                id: 1
                                serial_number: '1231321231'
                                meter_type_id: 1
                                in_use: 1
                                manufacturer_id: 1
                                created_at: '2018-06-22 11:50:09'
                                updated_at: '2018-12-17 14:20:23'
                                deleted_at: null
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 1
                              connection_type_id:
                                type: integer
                                example: 1
                              created_at:
                                type: string
                                example: '2018-06-22 11:59:46'
                              updated_at:
                                type: string
                                example: '2018-12-17 14:20:23'
                              connection_group_id:
                                type: integer
                                example: 1
                              meter:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                    example: 1
                                  serial_number:
                                    type: string
                                    example: '1231321231'
                                  meter_type_id:
                                    type: integer
                                    example: 1
                                  in_use:
                                    type: integer
                                    example: 1
                                  manufacturer_id:
                                    type: integer
                                    example: 1
                                  created_at:
                                    type: string
                                    example: '2018-06-22 11:50:09'
                                  updated_at:
                                    type: string
                                    example: '2018-12-17 14:20:23'
                                  deleted_at:
                                    type: string
                                    example: null
                  first_page_url:
                    type: string
                    example: 'http://localhost:8000/api/people/search?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'http://localhost:8000/api/people/search?page=1'
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'http://localhost:8000/api/people/search'
                  per_page:
                    type: integer
                    example: 15
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 1
                  total:
                    type: integer
                    example: 1
      tags:
        - People
      security: []
    parameters:
      -
        in: path
        name: term
        description: 'Optional parameter. The ID of the post.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 'John Doe'
      -
        in: path
        name: paginage
        description: 'Optional parameter. The page number.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
  '/api/people/{personId}':
    get:
      summary: "Detail\nDisplays the person with following relations\n- Addresses\n- Citizenship\n- Role\n- Meter list."
      operationId: detailDisplaysThePersonWithFollowingRelationsAddressesCitizenshipRoleMeterList
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    title: null
                    education: null
                    name: John
                    surname: Doe
                    birth_date: '1970-01-01'
                    sex: male
                    nationality: null
                    created_at: '2018-06-22 11:49:57'
                    updated_at: '2019-07-02 06:45:01'
                    customer_group_id: null
                    is_customer: 1
                    deleted_at: null
                    addresses:
                      -
                        id: 5
                        is_primary: 0
                        email: ''
                        phone: '+1111111111'
                        street: '-'
                        city_id: 1
                        geo_id: null
                        created_at: '2018-06-22 11:49:57'
                        updated_at: '2018-11-22 09:37:07'
                      -
                        id: 209
                        is_primary: 0
                        email: ''
                        phone: '+1111111112'
                        street: ''
                        city_id: 1
                        geo_id: null
                        created_at: '2018-11-15 08:57:47'
                        updated_at: '2020-03-21 13:47:36'
                    citizenship: null
                    role_owner:
                      -
                        id: 2
                        role_owner_type: person
                        role_owner_id: 1
                        role_definition_id: 1
                        created_at: '2018-07-27 15:29:03'
                        updated_at: '2018-07-27 15:29:03'
                        definitions:
                          id: 1
                          role_name: customer
                    meters:
                      -
                        id: 1
                        connection_type_id: 1
                        created_at: '2018-06-22 11:59:46'
                        updated_at: '2018-12-17 14:20:23'
                        connection_group_id: 1
                        meter:
                          id: 1
                          serial_number: '123123123123'
                          meter_type_id: 1
                          in_use: 1
                          manufacturer_id: 1
                          created_at: '2018-06-22 11:50:09'
                          updated_at: '2018-12-17 14:20:23'
                          deleted_at: null
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      title:
                        type: string
                        example: null
                      education:
                        type: string
                        example: null
                      name:
                        type: string
                        example: John
                      surname:
                        type: string
                        example: Doe
                      birth_date:
                        type: string
                        example: '1970-01-01'
                      sex:
                        type: string
                        example: male
                      nationality:
                        type: string
                        example: null
                      created_at:
                        type: string
                        example: '2018-06-22 11:49:57'
                      updated_at:
                        type: string
                        example: '2019-07-02 06:45:01'
                      customer_group_id:
                        type: string
                        example: null
                      is_customer:
                        type: integer
                        example: 1
                      deleted_at:
                        type: string
                        example: null
                      addresses:
                        type: array
                        example:
                          -
                            id: 5
                            is_primary: 0
                            email: ''
                            phone: '+1111111111'
                            street: '-'
                            city_id: 1
                            geo_id: null
                            created_at: '2018-06-22 11:49:57'
                            updated_at: '2018-11-22 09:37:07'
                          -
                            id: 209
                            is_primary: 0
                            email: ''
                            phone: '+1111111112'
                            street: ''
                            city_id: 1
                            geo_id: null
                            created_at: '2018-11-15 08:57:47'
                            updated_at: '2020-03-21 13:47:36'
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 5
                            is_primary:
                              type: integer
                              example: 0
                            email:
                              type: string
                              example: ''
                            phone:
                              type: string
                              example: '+1111111111'
                            street:
                              type: string
                              example: '-'
                            city_id:
                              type: integer
                              example: 1
                            geo_id:
                              type: string
                              example: null
                            created_at:
                              type: string
                              example: '2018-06-22 11:49:57'
                            updated_at:
                              type: string
                              example: '2018-11-22 09:37:07'
                      citizenship:
                        type: string
                        example: null
                      role_owner:
                        type: array
                        example:
                          -
                            id: 2
                            role_owner_type: person
                            role_owner_id: 1
                            role_definition_id: 1
                            created_at: '2018-07-27 15:29:03'
                            updated_at: '2018-07-27 15:29:03'
                            definitions:
                              id: 1
                              role_name: customer
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 2
                            role_owner_type:
                              type: string
                              example: person
                            role_owner_id:
                              type: integer
                              example: 1
                            role_definition_id:
                              type: integer
                              example: 1
                            created_at:
                              type: string
                              example: '2018-07-27 15:29:03'
                            updated_at:
                              type: string
                              example: '2018-07-27 15:29:03'
                            definitions:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 1
                                role_name:
                                  type: string
                                  example: customer
                      meters:
                        type: array
                        example:
                          -
                            id: 1
                            connection_type_id: 1
                            created_at: '2018-06-22 11:59:46'
                            updated_at: '2018-12-17 14:20:23'
                            connection_group_id: 1
                            meter:
                              id: 1
                              serial_number: '123123123123'
                              meter_type_id: 1
                              in_use: 1
                              manufacturer_id: 1
                              created_at: '2018-06-22 11:50:09'
                              updated_at: '2018-12-17 14:20:23'
                              deleted_at: null
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            connection_type_id:
                              type: integer
                              example: 1
                            created_at:
                              type: string
                              example: '2018-06-22 11:59:46'
                            updated_at:
                              type: string
                              example: '2018-12-17 14:20:23'
                            connection_group_id:
                              type: integer
                              example: 1
                            meter:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 1
                                serial_number:
                                  type: string
                                  example: '123123123123'
                                meter_type_id:
                                  type: integer
                                  example: 1
                                in_use:
                                  type: integer
                                  example: 1
                                manufacturer_id:
                                  type: integer
                                  example: 1
                                created_at:
                                  type: string
                                  example: '2018-06-22 11:50:09'
                                updated_at:
                                  type: string
                                  example: '2018-12-17 14:20:23'
                                deleted_at:
                                  type: string
                                  example: null
      tags:
        - People
      security: []
    put:
      summary: "Update\nUpdates the given parameter of that person."
      operationId: updateUpdatesTheGivenParameterOfThatPerson
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    title: null
                    education: null
                    name: John
                    surname: Doe
                    birth_date: '1970-01-01'
                    sex: null
                    nationality: null
                    created_at: '2018-06-22 11:49:57'
                    updated_at: '2020-03-31 09:59:08'
                    customer_group_id: null
                    is_customer: 1
                    deleted_at: null
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      title:
                        type: string
                        example: null
                      education:
                        type: string
                        example: null
                      name:
                        type: string
                        example: John
                      surname:
                        type: string
                        example: Doe
                      birth_date:
                        type: string
                        example: '1970-01-01'
                      sex:
                        type: string
                        example: null
                      nationality:
                        type: string
                        example: null
                      created_at:
                        type: string
                        example: '2018-06-22 11:49:57'
                      updated_at:
                        type: string
                        example: '2020-03-31 09:59:08'
                      customer_group_id:
                        type: string
                        example: null
                      is_customer:
                        type: integer
                        example: 1
                      deleted_at:
                        type: string
                        example: null
      tags:
        - People
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'required. The title of the person.'
                  example: Dr.
                  nullable: false
                name:
                  type: string
                  description: required.
                  example: John
                  nullable: false
                surname:
                  type: string
                  description: required.
                  example: Doe
                  nullable: false
                email:
                  type: string.
                  description: ''
                  example: john.doe@mail.com
                  nullable: false
                phone:
                  type: string.
                  description: ''
                  example: '+1111'
                  nullable: false
                birth_date:
                  type: string.
                  description: ''
                  example: '1970-01-01'
                  nullable: false
                sex:
                  type: string
                  description: ''
                  example: male
                  nullable: false
                education:
                  type: string.
                  description: ''
                  example: University
                  nullable: false
                city_id:
                  type: int.
                  description: ''
                  example: '1'
                  nullable: false
                street:
                  type: string.
                  description: ''
                  example: 'Some Street 1/13'
                  nullable: false
                nationality:
                  type: string.
                  description: ''
                  example: 'Earth Citizen'
                  nullable: false
              required:
                - sex
      security: []
    delete:
      summary: "Delete\nDeletes that person with all his/her relations from the database. The person model uses soft deletes."
      operationId: deleteDeletesThatPersonWithAllHisherRelationsFromTheDatabaseThePersonModelUsesSoftDeletes
      description: 'That means the orinal record wont be deleted but all mentioned relations will be removed permanently.'
      parameters: []
      responses: {  }
      tags:
        - People
      security: []
    parameters:
      -
        in: path
        name: personId
        description: ''
        example: libero
        required: true
        schema:
          type: string
  '/api/people/{personId}/transactions':
    get:
      summary: "Transactions\nThe list of all transactions(paginated) which belong to that person."
      operationId: transactionsTheListOfAllTransactionspaginatedWhichBelongToThatPerson
      description: 'Each page contains 7 entries of the last transaction.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  current_page: 1
                  data:
                    -
                      id: 79474
                      amount: 10000
                      payment_service: xyt_transaction
                      sender: '255769644521'
                      payment_type: installment
                      paid_for_type: asset_loan
                      paid_for_id: 1
                      payer_type: person
                      payer_id: 1
                      transaction_id: 86064
                      created_at: '2020-02-11 12:19:58'
                      updated_at: '2020-02-11 12:19:58'
                      transaction:
                        id: 86064
                        original_transaction_id: 80277
                        original_transaction_type: xyt_transaction
                        amount: 10000
                        type: energy
                        sender: '111111111'
                        message: '123123123'
                        created_at: '2020-02-11 12:19:56'
                        updated_at: '2020-02-11 12:19:57'
                        token: null
                  first_page_url: 'http://localhost:8000/api/people/1/transactions?page=1'
                  from: 1
                  last_page: 1
                  last_page_url: 'http://localhost:8000/api/people/1/transactions?page=1'
                  next_page_url: null
                  path: 'http://localhost:8000/api/people/1/transactions'
                  per_page: 7
                  prev_page_url: null
                  to: 6
                  total: 6
                properties:
                  current_page:
                    type: integer
                    example: 1
                  data:
                    type: array
                    example:
                      -
                        id: 79474
                        amount: 10000
                        payment_service: xyt_transaction
                        sender: '255769644521'
                        payment_type: installment
                        paid_for_type: asset_loan
                        paid_for_id: 1
                        payer_type: person
                        payer_id: 1
                        transaction_id: 86064
                        created_at: '2020-02-11 12:19:58'
                        updated_at: '2020-02-11 12:19:58'
                        transaction:
                          id: 86064
                          original_transaction_id: 80277
                          original_transaction_type: xyt_transaction
                          amount: 10000
                          type: energy
                          sender: '111111111'
                          message: '123123123'
                          created_at: '2020-02-11 12:19:56'
                          updated_at: '2020-02-11 12:19:57'
                          token: null
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 79474
                        amount:
                          type: integer
                          example: 10000
                        payment_service:
                          type: string
                          example: xyt_transaction
                        sender:
                          type: string
                          example: '255769644521'
                        payment_type:
                          type: string
                          example: installment
                        paid_for_type:
                          type: string
                          example: asset_loan
                        paid_for_id:
                          type: integer
                          example: 1
                        payer_type:
                          type: string
                          example: person
                        payer_id:
                          type: integer
                          example: 1
                        transaction_id:
                          type: integer
                          example: 86064
                        created_at:
                          type: string
                          example: '2020-02-11 12:19:58'
                        updated_at:
                          type: string
                          example: '2020-02-11 12:19:58'
                        transaction:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 86064
                            original_transaction_id:
                              type: integer
                              example: 80277
                            original_transaction_type:
                              type: string
                              example: xyt_transaction
                            amount:
                              type: integer
                              example: 10000
                            type:
                              type: string
                              example: energy
                            sender:
                              type: string
                              example: '111111111'
                            message:
                              type: string
                              example: '123123123'
                            created_at:
                              type: string
                              example: '2020-02-11 12:19:56'
                            updated_at:
                              type: string
                              example: '2020-02-11 12:19:57'
                            token:
                              type: string
                              example: null
                  first_page_url:
                    type: string
                    example: 'http://localhost:8000/api/people/1/transactions?page=1'
                  from:
                    type: integer
                    example: 1
                  last_page:
                    type: integer
                    example: 1
                  last_page_url:
                    type: string
                    example: 'http://localhost:8000/api/people/1/transactions?page=1'
                  next_page_url:
                    type: string
                    example: null
                  path:
                    type: string
                    example: 'http://localhost:8000/api/people/1/transactions'
                  per_page:
                    type: integer
                    example: 7
                  prev_page_url:
                    type: string
                    example: null
                  to:
                    type: integer
                    example: 6
                  total:
                    type: integer
                    example: 6
      tags:
        - People
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                person_id:
                  type: integer
                  description: 'the ID of the person.'
                  example: 2
                  nullable: false
              required:
                - person_id
      security: []
    parameters:
      -
        in: path
        name: personId
        description: ''
        example: sunt
        required: true
        schema:
          type: string
tags:
  -
    name: Agent-Appliances
    description: 'Class AgentAssignedApplianceController'
  -
    name: Agent-Authenticator
    description: "Class AgentAuthController\nResponsible for AgentAPP-API-Call authentications."
  -
    name: Authenticator
    description: "Class AuthController\nResponsible for API-Call authentications."
  -
    name: Endpoints
    description: ''
  -
    name: MeterTypes
    description: 'Class MeterTypeController'
  -
    name: Meters
    description: ''
  -
    name: Payment-History
    description: 'Class PaymentHistoryController'
  -
    name: People
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
