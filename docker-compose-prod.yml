version: '3.1'

services:
  'laravel':
    build:
      context: Docker/
      dockerfile: DockerfileLaravelProd
    image: laravel/php:8
    restart: unless-stopped
    container_name: laravel
    depends_on:
      - maria
      - composer
      - cron
    links:
      - maria:db
      - redis:redis
    ports:
      - "9000:80"
    volumes:
      - ./Website/config/php/php.ini:/usr/local/etc/php/php.ini
      - ./Website/htdocs:/var/www/html

  'ui':
    container_name: ui
    build:
      context: ./Website/ui/
      dockerfile: Dockerfile
    ports:
      - "8081:80"
    volumes:
      - ./Website/ui:/app

  'cron':
    container_name: cron_job
    build:
      context: Docker/
      dockerfile: DockerfileCron
    image: laravel/cron
    depends_on:
      - maria
    links:
      - maria:db
      - redis:redis
    volumes:
      - ./Website/config/php/php.ini:/usr/local/etc/php/php.ini
      - ./Website/htdocs:/var/www/html

  'worker':
    container_name: worker
    restart: unless-stopped
    build:
      context: Docker/
      dockerfile: DockerfileQueueWorker
    volumes:
      - ./Website/htdocs/mpmanager:/var/www/laravel
      - ./Website/config/php/php.ini:/usr/local/etc/php/php.ini
    depends_on:
      - maria
    links:
      - maria:db
      - redis:redis

  'composer':
    container_name: mpmanager_composer
    build:
      context: Docker/
      dockerfile: DockerfileComposer
    restart: 'no'
    command: install
    volumes:
      - ./Website/htdocs/mpmanager:/app

  'redis':
    image: redis:5
    restart: unless-stopped
    volumes:
      - ./redis/:/data

  'maria':
    container_name: maria
    image: mariadb:10.3
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: micro_power_manager
      MYSQL_ROOT_PASSWORD: inensus2022.
    volumes:
      - ./DB/mysql:/var/lib/mysql

  nginx:
    container_name: nginx
    image: nginx:1.15-alpine
    restart: unless-stopped
    volumes:
      - ./Website:/var/www/html
      - ./NginxProxy/conf.p:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - ui
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  ui_dist:
